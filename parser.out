Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ELSE
    RETURN

Grammar

Rule 0     S' -> start
Rule 1     start -> bloc
Rule 2     bloc -> bloc statement SEMI
Rule 3     bloc -> statement SEMI
Rule 4     statement -> NAME EQUALS expression
Rule 5     statement -> PRINT LPAREN expression RPAREN
Rule 6     statement -> PRINTSTR LPAREN strings RPAREN
Rule 7     statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
Rule 8     statement -> WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
Rule 9     statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
Rule 10    statement -> FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
Rule 11    statement -> NAME LPAREN RPAREN
Rule 12    expression -> expression PLUS expression
Rule 13    expression -> expression MINUS expression
Rule 14    expression -> expression TIMES expression
Rule 15    expression -> expression DIVIDE expression
Rule 16    expression -> expression INF expression
Rule 17    expression -> expression SUP expression
Rule 18    expression -> expression AND expression
Rule 19    expression -> expression OR expression
Rule 20    expression -> expression BOOLEQUAL expression
Rule 21    expression -> MINUS expression
Rule 22    expression -> LPAREN expression RPAREN
Rule 23    expression -> NUMBER
Rule 24    expression -> NAME
Rule 25    strings -> NAME strings
Rule 26    strings -> NAME

Terminals, with rules where they appear

AND                  : 18
BOOLEQUAL            : 20
DIVIDE               : 15
ELSE                 : 
EQUALS               : 4 9 9
FOR                  : 9
FUNC                 : 10
IF                   : 7
INF                  : 16
LACCOLADE            : 7 8 9 10
LPAREN               : 5 6 7 8 9 10 11 22
MINUS                : 13 21
NAME                 : 4 9 9 10 11 24 25 26
NUMBER               : 23
OR                   : 19
PLUS                 : 12
PRINT                : 5
PRINTSTR             : 6
RACCOLADE            : 7 8 9 10
RETURN               : 
RPAREN               : 5 6 7 8 9 10 11 22
SEMI                 : 2 3 9 9
SUP                  : 17
TIMES                : 14
WHILE                : 8
error                : 

Nonterminals, with rules where they appear

bloc                 : 1 2 7 8 9 10
expression           : 4 5 7 8 9 9 9 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 22
start                : 0
statement            : 2 3
strings              : 6 25

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . bloc
    (2) bloc -> . bloc statement SEMI
    (3) bloc -> . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . NAME LPAREN RPAREN

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10

    start                          shift and go to state 1
    bloc                           shift and go to state 2
    statement                      shift and go to state 3

state 1

    (0) S' -> start .



state 2

    (1) start -> bloc .
    (2) bloc -> bloc . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . NAME LPAREN RPAREN

    $end            reduce using rule 1 (start -> bloc .)
    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10

    statement                      shift and go to state 11

state 3

    (3) bloc -> statement . SEMI

    SEMI            shift and go to state 12


state 4

    (4) statement -> NAME . EQUALS expression
    (11) statement -> NAME . LPAREN RPAREN

    EQUALS          shift and go to state 13
    LPAREN          shift and go to state 14


state 5

    (5) statement -> PRINT . LPAREN expression RPAREN

    LPAREN          shift and go to state 15


state 6

    (6) statement -> PRINTSTR . LPAREN strings RPAREN

    LPAREN          shift and go to state 16


state 7

    (7) statement -> IF . LPAREN expression RPAREN LACCOLADE bloc RACCOLADE

    LPAREN          shift and go to state 17


state 8

    (8) statement -> WHILE . LPAREN expression RPAREN LACCOLADE bloc RACCOLADE

    LPAREN          shift and go to state 18


state 9

    (9) statement -> FOR . LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE

    LPAREN          shift and go to state 19


state 10

    (10) statement -> FUNC . NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE

    NAME            shift and go to state 20


state 11

    (2) bloc -> bloc statement . SEMI

    SEMI            shift and go to state 21


state 12

    (3) bloc -> statement SEMI .

    NAME            reduce using rule 3 (bloc -> statement SEMI .)
    PRINT           reduce using rule 3 (bloc -> statement SEMI .)
    PRINTSTR        reduce using rule 3 (bloc -> statement SEMI .)
    IF              reduce using rule 3 (bloc -> statement SEMI .)
    WHILE           reduce using rule 3 (bloc -> statement SEMI .)
    FOR             reduce using rule 3 (bloc -> statement SEMI .)
    FUNC            reduce using rule 3 (bloc -> statement SEMI .)
    $end            reduce using rule 3 (bloc -> statement SEMI .)
    RACCOLADE       reduce using rule 3 (bloc -> statement SEMI .)


state 13

    (4) statement -> NAME EQUALS . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression INF expression
    (17) expression -> . expression SUP expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression BOOLEQUAL expression
    (21) expression -> . MINUS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . NUMBER
    (24) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 23

state 14

    (11) statement -> NAME LPAREN . RPAREN

    RPAREN          shift and go to state 27


state 15

    (5) statement -> PRINT LPAREN . expression RPAREN
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression INF expression
    (17) expression -> . expression SUP expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression BOOLEQUAL expression
    (21) expression -> . MINUS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . NUMBER
    (24) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 28

state 16

    (6) statement -> PRINTSTR LPAREN . strings RPAREN
    (25) strings -> . NAME strings
    (26) strings -> . NAME

    NAME            shift and go to state 30

    strings                        shift and go to state 29

state 17

    (7) statement -> IF LPAREN . expression RPAREN LACCOLADE bloc RACCOLADE
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression INF expression
    (17) expression -> . expression SUP expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression BOOLEQUAL expression
    (21) expression -> . MINUS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . NUMBER
    (24) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 31

state 18

    (8) statement -> WHILE LPAREN . expression RPAREN LACCOLADE bloc RACCOLADE
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression INF expression
    (17) expression -> . expression SUP expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression BOOLEQUAL expression
    (21) expression -> . MINUS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . NUMBER
    (24) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 32

state 19

    (9) statement -> FOR LPAREN . NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE

    NAME            shift and go to state 33


state 20

    (10) statement -> FUNC NAME . LPAREN RPAREN LACCOLADE bloc RACCOLADE

    LPAREN          shift and go to state 34


state 21

    (2) bloc -> bloc statement SEMI .

    NAME            reduce using rule 2 (bloc -> bloc statement SEMI .)
    PRINT           reduce using rule 2 (bloc -> bloc statement SEMI .)
    PRINTSTR        reduce using rule 2 (bloc -> bloc statement SEMI .)
    IF              reduce using rule 2 (bloc -> bloc statement SEMI .)
    WHILE           reduce using rule 2 (bloc -> bloc statement SEMI .)
    FOR             reduce using rule 2 (bloc -> bloc statement SEMI .)
    FUNC            reduce using rule 2 (bloc -> bloc statement SEMI .)
    $end            reduce using rule 2 (bloc -> bloc statement SEMI .)
    RACCOLADE       reduce using rule 2 (bloc -> bloc statement SEMI .)


state 22

    (24) expression -> NAME .

    PLUS            reduce using rule 24 (expression -> NAME .)
    MINUS           reduce using rule 24 (expression -> NAME .)
    TIMES           reduce using rule 24 (expression -> NAME .)
    DIVIDE          reduce using rule 24 (expression -> NAME .)
    INF             reduce using rule 24 (expression -> NAME .)
    SUP             reduce using rule 24 (expression -> NAME .)
    AND             reduce using rule 24 (expression -> NAME .)
    OR              reduce using rule 24 (expression -> NAME .)
    BOOLEQUAL       reduce using rule 24 (expression -> NAME .)
    SEMI            reduce using rule 24 (expression -> NAME .)
    RPAREN          reduce using rule 24 (expression -> NAME .)


state 23

    (4) statement -> NAME EQUALS expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . INF expression
    (17) expression -> expression . SUP expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . BOOLEQUAL expression

    SEMI            reduce using rule 4 (statement -> NAME EQUALS expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    INF             shift and go to state 39
    SUP             shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42
    BOOLEQUAL       shift and go to state 43


state 24

    (21) expression -> MINUS . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression INF expression
    (17) expression -> . expression SUP expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression BOOLEQUAL expression
    (21) expression -> . MINUS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . NUMBER
    (24) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 44

state 25

    (22) expression -> LPAREN . expression RPAREN
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression INF expression
    (17) expression -> . expression SUP expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression BOOLEQUAL expression
    (21) expression -> . MINUS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . NUMBER
    (24) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 45

state 26

    (23) expression -> NUMBER .

    PLUS            reduce using rule 23 (expression -> NUMBER .)
    MINUS           reduce using rule 23 (expression -> NUMBER .)
    TIMES           reduce using rule 23 (expression -> NUMBER .)
    DIVIDE          reduce using rule 23 (expression -> NUMBER .)
    INF             reduce using rule 23 (expression -> NUMBER .)
    SUP             reduce using rule 23 (expression -> NUMBER .)
    AND             reduce using rule 23 (expression -> NUMBER .)
    OR              reduce using rule 23 (expression -> NUMBER .)
    BOOLEQUAL       reduce using rule 23 (expression -> NUMBER .)
    SEMI            reduce using rule 23 (expression -> NUMBER .)
    RPAREN          reduce using rule 23 (expression -> NUMBER .)


state 27

    (11) statement -> NAME LPAREN RPAREN .

    SEMI            reduce using rule 11 (statement -> NAME LPAREN RPAREN .)


state 28

    (5) statement -> PRINT LPAREN expression . RPAREN
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . INF expression
    (17) expression -> expression . SUP expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . BOOLEQUAL expression

    RPAREN          shift and go to state 46
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    INF             shift and go to state 39
    SUP             shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42
    BOOLEQUAL       shift and go to state 43


state 29

    (6) statement -> PRINTSTR LPAREN strings . RPAREN

    RPAREN          shift and go to state 47


state 30

    (25) strings -> NAME . strings
    (26) strings -> NAME .
    (25) strings -> . NAME strings
    (26) strings -> . NAME

    RPAREN          reduce using rule 26 (strings -> NAME .)
    NAME            shift and go to state 30

    strings                        shift and go to state 48

state 31

    (7) statement -> IF LPAREN expression . RPAREN LACCOLADE bloc RACCOLADE
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . INF expression
    (17) expression -> expression . SUP expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . BOOLEQUAL expression

    RPAREN          shift and go to state 49
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    INF             shift and go to state 39
    SUP             shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42
    BOOLEQUAL       shift and go to state 43


state 32

    (8) statement -> WHILE LPAREN expression . RPAREN LACCOLADE bloc RACCOLADE
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . INF expression
    (17) expression -> expression . SUP expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . BOOLEQUAL expression

    RPAREN          shift and go to state 50
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    INF             shift and go to state 39
    SUP             shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42
    BOOLEQUAL       shift and go to state 43


state 33

    (9) statement -> FOR LPAREN NAME . EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE

    EQUALS          shift and go to state 51


state 34

    (10) statement -> FUNC NAME LPAREN . RPAREN LACCOLADE bloc RACCOLADE

    RPAREN          shift and go to state 52


state 35

    (12) expression -> expression PLUS . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression INF expression
    (17) expression -> . expression SUP expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression BOOLEQUAL expression
    (21) expression -> . MINUS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . NUMBER
    (24) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 53

state 36

    (13) expression -> expression MINUS . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression INF expression
    (17) expression -> . expression SUP expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression BOOLEQUAL expression
    (21) expression -> . MINUS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . NUMBER
    (24) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 54

state 37

    (14) expression -> expression TIMES . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression INF expression
    (17) expression -> . expression SUP expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression BOOLEQUAL expression
    (21) expression -> . MINUS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . NUMBER
    (24) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 55

state 38

    (15) expression -> expression DIVIDE . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression INF expression
    (17) expression -> . expression SUP expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression BOOLEQUAL expression
    (21) expression -> . MINUS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . NUMBER
    (24) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 56

state 39

    (16) expression -> expression INF . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression INF expression
    (17) expression -> . expression SUP expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression BOOLEQUAL expression
    (21) expression -> . MINUS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . NUMBER
    (24) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 57

state 40

    (17) expression -> expression SUP . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression INF expression
    (17) expression -> . expression SUP expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression BOOLEQUAL expression
    (21) expression -> . MINUS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . NUMBER
    (24) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 58

state 41

    (18) expression -> expression AND . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression INF expression
    (17) expression -> . expression SUP expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression BOOLEQUAL expression
    (21) expression -> . MINUS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . NUMBER
    (24) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 59

state 42

    (19) expression -> expression OR . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression INF expression
    (17) expression -> . expression SUP expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression BOOLEQUAL expression
    (21) expression -> . MINUS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . NUMBER
    (24) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 60

state 43

    (20) expression -> expression BOOLEQUAL . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression INF expression
    (17) expression -> . expression SUP expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression BOOLEQUAL expression
    (21) expression -> . MINUS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . NUMBER
    (24) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 61

state 44

    (21) expression -> MINUS expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . INF expression
    (17) expression -> expression . SUP expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . BOOLEQUAL expression

    PLUS            reduce using rule 21 (expression -> MINUS expression .)
    MINUS           reduce using rule 21 (expression -> MINUS expression .)
    INF             reduce using rule 21 (expression -> MINUS expression .)
    SUP             reduce using rule 21 (expression -> MINUS expression .)
    AND             reduce using rule 21 (expression -> MINUS expression .)
    OR              reduce using rule 21 (expression -> MINUS expression .)
    BOOLEQUAL       reduce using rule 21 (expression -> MINUS expression .)
    SEMI            reduce using rule 21 (expression -> MINUS expression .)
    RPAREN          reduce using rule 21 (expression -> MINUS expression .)
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38

  ! TIMES           [ reduce using rule 21 (expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! INF             [ shift and go to state 39 ]
  ! SUP             [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]
  ! BOOLEQUAL       [ shift and go to state 43 ]


state 45

    (22) expression -> LPAREN expression . RPAREN
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . INF expression
    (17) expression -> expression . SUP expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . BOOLEQUAL expression

    RPAREN          shift and go to state 62
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    INF             shift and go to state 39
    SUP             shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42
    BOOLEQUAL       shift and go to state 43


state 46

    (5) statement -> PRINT LPAREN expression RPAREN .

    SEMI            reduce using rule 5 (statement -> PRINT LPAREN expression RPAREN .)


state 47

    (6) statement -> PRINTSTR LPAREN strings RPAREN .

    SEMI            reduce using rule 6 (statement -> PRINTSTR LPAREN strings RPAREN .)


state 48

    (25) strings -> NAME strings .

    RPAREN          reduce using rule 25 (strings -> NAME strings .)


state 49

    (7) statement -> IF LPAREN expression RPAREN . LACCOLADE bloc RACCOLADE

    LACCOLADE       shift and go to state 63


state 50

    (8) statement -> WHILE LPAREN expression RPAREN . LACCOLADE bloc RACCOLADE

    LACCOLADE       shift and go to state 64


state 51

    (9) statement -> FOR LPAREN NAME EQUALS . expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression INF expression
    (17) expression -> . expression SUP expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression BOOLEQUAL expression
    (21) expression -> . MINUS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . NUMBER
    (24) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 65

state 52

    (10) statement -> FUNC NAME LPAREN RPAREN . LACCOLADE bloc RACCOLADE

    LACCOLADE       shift and go to state 66


state 53

    (12) expression -> expression PLUS expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . INF expression
    (17) expression -> expression . SUP expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . BOOLEQUAL expression

    PLUS            reduce using rule 12 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 12 (expression -> expression PLUS expression .)
    INF             reduce using rule 12 (expression -> expression PLUS expression .)
    SUP             reduce using rule 12 (expression -> expression PLUS expression .)
    AND             reduce using rule 12 (expression -> expression PLUS expression .)
    OR              reduce using rule 12 (expression -> expression PLUS expression .)
    BOOLEQUAL       reduce using rule 12 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 12 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 12 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38

  ! TIMES           [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! INF             [ shift and go to state 39 ]
  ! SUP             [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]
  ! BOOLEQUAL       [ shift and go to state 43 ]


state 54

    (13) expression -> expression MINUS expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . INF expression
    (17) expression -> expression . SUP expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . BOOLEQUAL expression

    PLUS            reduce using rule 13 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 13 (expression -> expression MINUS expression .)
    INF             reduce using rule 13 (expression -> expression MINUS expression .)
    SUP             reduce using rule 13 (expression -> expression MINUS expression .)
    AND             reduce using rule 13 (expression -> expression MINUS expression .)
    OR              reduce using rule 13 (expression -> expression MINUS expression .)
    BOOLEQUAL       reduce using rule 13 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 13 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 13 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38

  ! TIMES           [ reduce using rule 13 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 13 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! INF             [ shift and go to state 39 ]
  ! SUP             [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]
  ! BOOLEQUAL       [ shift and go to state 43 ]


state 55

    (14) expression -> expression TIMES expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . INF expression
    (17) expression -> expression . SUP expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . BOOLEQUAL expression

    PLUS            reduce using rule 14 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 14 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 14 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 14 (expression -> expression TIMES expression .)
    INF             reduce using rule 14 (expression -> expression TIMES expression .)
    SUP             reduce using rule 14 (expression -> expression TIMES expression .)
    AND             reduce using rule 14 (expression -> expression TIMES expression .)
    OR              reduce using rule 14 (expression -> expression TIMES expression .)
    BOOLEQUAL       reduce using rule 14 (expression -> expression TIMES expression .)
    SEMI            reduce using rule 14 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 14 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! TIMES           [ shift and go to state 37 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! INF             [ shift and go to state 39 ]
  ! SUP             [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]
  ! BOOLEQUAL       [ shift and go to state 43 ]


state 56

    (15) expression -> expression DIVIDE expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . INF expression
    (17) expression -> expression . SUP expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . BOOLEQUAL expression

    PLUS            reduce using rule 15 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 15 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 15 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 15 (expression -> expression DIVIDE expression .)
    INF             reduce using rule 15 (expression -> expression DIVIDE expression .)
    SUP             reduce using rule 15 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 15 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 15 (expression -> expression DIVIDE expression .)
    BOOLEQUAL       reduce using rule 15 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 15 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 15 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! TIMES           [ shift and go to state 37 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! INF             [ shift and go to state 39 ]
  ! SUP             [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]
  ! BOOLEQUAL       [ shift and go to state 43 ]


state 57

    (16) expression -> expression INF expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . INF expression
    (17) expression -> expression . SUP expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . BOOLEQUAL expression

    INF             reduce using rule 16 (expression -> expression INF expression .)
    SUP             reduce using rule 16 (expression -> expression INF expression .)
    AND             reduce using rule 16 (expression -> expression INF expression .)
    OR              reduce using rule 16 (expression -> expression INF expression .)
    BOOLEQUAL       reduce using rule 16 (expression -> expression INF expression .)
    SEMI            reduce using rule 16 (expression -> expression INF expression .)
    RPAREN          reduce using rule 16 (expression -> expression INF expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38

  ! PLUS            [ reduce using rule 16 (expression -> expression INF expression .) ]
  ! MINUS           [ reduce using rule 16 (expression -> expression INF expression .) ]
  ! TIMES           [ reduce using rule 16 (expression -> expression INF expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression INF expression .) ]
  ! INF             [ shift and go to state 39 ]
  ! SUP             [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]
  ! BOOLEQUAL       [ shift and go to state 43 ]


state 58

    (17) expression -> expression SUP expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . INF expression
    (17) expression -> expression . SUP expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . BOOLEQUAL expression

    INF             reduce using rule 17 (expression -> expression SUP expression .)
    SUP             reduce using rule 17 (expression -> expression SUP expression .)
    AND             reduce using rule 17 (expression -> expression SUP expression .)
    OR              reduce using rule 17 (expression -> expression SUP expression .)
    BOOLEQUAL       reduce using rule 17 (expression -> expression SUP expression .)
    SEMI            reduce using rule 17 (expression -> expression SUP expression .)
    RPAREN          reduce using rule 17 (expression -> expression SUP expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38

  ! PLUS            [ reduce using rule 17 (expression -> expression SUP expression .) ]
  ! MINUS           [ reduce using rule 17 (expression -> expression SUP expression .) ]
  ! TIMES           [ reduce using rule 17 (expression -> expression SUP expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression SUP expression .) ]
  ! INF             [ shift and go to state 39 ]
  ! SUP             [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]
  ! BOOLEQUAL       [ shift and go to state 43 ]


state 59

    (18) expression -> expression AND expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . INF expression
    (17) expression -> expression . SUP expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . BOOLEQUAL expression

    AND             reduce using rule 18 (expression -> expression AND expression .)
    OR              reduce using rule 18 (expression -> expression AND expression .)
    SEMI            reduce using rule 18 (expression -> expression AND expression .)
    RPAREN          reduce using rule 18 (expression -> expression AND expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    INF             shift and go to state 39
    SUP             shift and go to state 40
    BOOLEQUAL       shift and go to state 43

  ! PLUS            [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! INF             [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! SUP             [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! BOOLEQUAL       [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 60

    (19) expression -> expression OR expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . INF expression
    (17) expression -> expression . SUP expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . BOOLEQUAL expression

    OR              reduce using rule 19 (expression -> expression OR expression .)
    SEMI            reduce using rule 19 (expression -> expression OR expression .)
    RPAREN          reduce using rule 19 (expression -> expression OR expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    INF             shift and go to state 39
    SUP             shift and go to state 40
    AND             shift and go to state 41
    BOOLEQUAL       shift and go to state 43

  ! PLUS            [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! INF             [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! SUP             [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! BOOLEQUAL       [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 42 ]


state 61

    (20) expression -> expression BOOLEQUAL expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . INF expression
    (17) expression -> expression . SUP expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . BOOLEQUAL expression

    INF             reduce using rule 20 (expression -> expression BOOLEQUAL expression .)
    SUP             reduce using rule 20 (expression -> expression BOOLEQUAL expression .)
    AND             reduce using rule 20 (expression -> expression BOOLEQUAL expression .)
    OR              reduce using rule 20 (expression -> expression BOOLEQUAL expression .)
    BOOLEQUAL       reduce using rule 20 (expression -> expression BOOLEQUAL expression .)
    SEMI            reduce using rule 20 (expression -> expression BOOLEQUAL expression .)
    RPAREN          reduce using rule 20 (expression -> expression BOOLEQUAL expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38

  ! PLUS            [ reduce using rule 20 (expression -> expression BOOLEQUAL expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression BOOLEQUAL expression .) ]
  ! TIMES           [ reduce using rule 20 (expression -> expression BOOLEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression BOOLEQUAL expression .) ]
  ! INF             [ shift and go to state 39 ]
  ! SUP             [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]
  ! BOOLEQUAL       [ shift and go to state 43 ]


state 62

    (22) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    INF             reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    SUP             reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    BOOLEQUAL       reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 22 (expression -> LPAREN expression RPAREN .)


state 63

    (7) statement -> IF LPAREN expression RPAREN LACCOLADE . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMI
    (3) bloc -> . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . NAME LPAREN RPAREN

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10

    bloc                           shift and go to state 67
    statement                      shift and go to state 3

state 64

    (8) statement -> WHILE LPAREN expression RPAREN LACCOLADE . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMI
    (3) bloc -> . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . NAME LPAREN RPAREN

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10

    bloc                           shift and go to state 68
    statement                      shift and go to state 3

state 65

    (9) statement -> FOR LPAREN NAME EQUALS expression . SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . INF expression
    (17) expression -> expression . SUP expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . BOOLEQUAL expression

    SEMI            shift and go to state 69
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    INF             shift and go to state 39
    SUP             shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42
    BOOLEQUAL       shift and go to state 43


state 66

    (10) statement -> FUNC NAME LPAREN RPAREN LACCOLADE . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMI
    (3) bloc -> . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . NAME LPAREN RPAREN

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10

    bloc                           shift and go to state 70
    statement                      shift and go to state 3

state 67

    (7) statement -> IF LPAREN expression RPAREN LACCOLADE bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . NAME LPAREN RPAREN

    RACCOLADE       shift and go to state 71
    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10

    statement                      shift and go to state 11

state 68

    (8) statement -> WHILE LPAREN expression RPAREN LACCOLADE bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . NAME LPAREN RPAREN

    RACCOLADE       shift and go to state 72
    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10

    statement                      shift and go to state 11

state 69

    (9) statement -> FOR LPAREN NAME EQUALS expression SEMI . expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression INF expression
    (17) expression -> . expression SUP expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression BOOLEQUAL expression
    (21) expression -> . MINUS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . NUMBER
    (24) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 73

state 70

    (10) statement -> FUNC NAME LPAREN RPAREN LACCOLADE bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . NAME LPAREN RPAREN

    RACCOLADE       shift and go to state 74
    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10

    statement                      shift and go to state 11

state 71

    (7) statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE .

    SEMI            reduce using rule 7 (statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE .)


state 72

    (8) statement -> WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE .

    SEMI            reduce using rule 8 (statement -> WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE .)


state 73

    (9) statement -> FOR LPAREN NAME EQUALS expression SEMI expression . SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . INF expression
    (17) expression -> expression . SUP expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . BOOLEQUAL expression

    SEMI            shift and go to state 75
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    INF             shift and go to state 39
    SUP             shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42
    BOOLEQUAL       shift and go to state 43


state 74

    (10) statement -> FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE .

    SEMI            reduce using rule 10 (statement -> FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE .)


state 75

    (9) statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI . NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE

    NAME            shift and go to state 76


state 76

    (9) statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME . EQUALS expression RPAREN LACCOLADE bloc RACCOLADE

    EQUALS          shift and go to state 77


state 77

    (9) statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS . expression RPAREN LACCOLADE bloc RACCOLADE
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression INF expression
    (17) expression -> . expression SUP expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression BOOLEQUAL expression
    (21) expression -> . MINUS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . NUMBER
    (24) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 78

state 78

    (9) statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression . RPAREN LACCOLADE bloc RACCOLADE
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . INF expression
    (17) expression -> expression . SUP expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . BOOLEQUAL expression

    RPAREN          shift and go to state 79
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    INF             shift and go to state 39
    SUP             shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42
    BOOLEQUAL       shift and go to state 43


state 79

    (9) statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN . LACCOLADE bloc RACCOLADE

    LACCOLADE       shift and go to state 80


state 80

    (9) statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMI
    (3) bloc -> . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . NAME LPAREN RPAREN

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10

    bloc                           shift and go to state 81
    statement                      shift and go to state 3

state 81

    (9) statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . NAME LPAREN RPAREN

    RACCOLADE       shift and go to state 82
    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10

    statement                      shift and go to state 11

state 82

    (9) statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE .

    SEMI            reduce using rule 9 (statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE .)

