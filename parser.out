Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    RETURN

Grammar

Rule 0     S' -> start
Rule 1     start -> bloc
Rule 2     bloc -> bloc statement SEMI
Rule 3     bloc -> statement SEMI
Rule 4     statement -> NAME EQUALS expression
Rule 5     statement -> PRINT LPAREN expression RPAREN
Rule 6     statement -> PRINTSTR LPAREN strings RPAREN
Rule 7     statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
Rule 8     statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
Rule 9     statement -> WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
Rule 10    statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
Rule 11    statement -> FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
Rule 12    statement -> FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE
Rule 13    statement -> NAME LPAREN RPAREN
Rule 14    statement -> NAME LPAREN expression RPAREN
Rule 15    statement -> SHARP strings
Rule 16    expression -> expression PLUS expression
Rule 17    expression -> expression MINUS expression
Rule 18    expression -> expression TIMES expression
Rule 19    expression -> expression DIVIDE expression
Rule 20    expression -> expression INF expression
Rule 21    expression -> expression SUP expression
Rule 22    expression -> expression INFEQUAL expression
Rule 23    expression -> expression SUPEQUAL expression
Rule 24    expression -> expression AND expression
Rule 25    expression -> expression OR expression
Rule 26    expression -> expression BOOLEQUAL expression
Rule 27    expression -> MINUS expression
Rule 28    expression -> expression COMA expression
Rule 29    expression -> LPAREN expression RPAREN
Rule 30    expression -> NUMBER
Rule 31    expression -> NAME
Rule 32    param -> NAME COMA param
Rule 33    param -> NAME EQUALS expression COMA param
Rule 34    param -> NAME EQUALS expression
Rule 35    param -> NAME
Rule 36    strings -> NAME strings
Rule 37    strings -> NAME

Terminals, with rules where they appear

AND                  : 24
BOOLEQUAL            : 26
COMA                 : 28 32 33
DIVIDE               : 19
ELSE                 : 8
EQUALS               : 4 10 10 33 34
FOR                  : 10
FUNC                 : 11 12
IF                   : 7 8
INF                  : 20
INFEQUAL             : 22
LACCOLADE            : 7 8 8 9 10 11 12
LPAREN               : 5 6 7 8 9 10 11 12 13 14 29
MINUS                : 17 27
NAME                 : 4 10 10 11 12 13 14 31 32 33 34 35 36 37
NUMBER               : 30
OR                   : 25
PLUS                 : 16
PRINT                : 5
PRINTSTR             : 6
RACCOLADE            : 7 8 8 9 10 11 12
RETURN               : 
RPAREN               : 5 6 7 8 9 10 11 12 13 14 29
SEMI                 : 2 3 10 10
SHARP                : 15
SUP                  : 21
SUPEQUAL             : 23
TIMES                : 18
WHILE                : 9
error                : 

Nonterminals, with rules where they appear

bloc                 : 1 2 7 8 8 9 10 11 12
expression           : 4 5 7 8 9 10 10 10 14 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 28 28 29 33 34
param                : 12 32 33
start                : 0
statement            : 2 3
strings              : 6 15 36

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . bloc
    (2) bloc -> . bloc statement SEMI
    (3) bloc -> . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (12) statement -> . FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE
    (13) statement -> . NAME LPAREN RPAREN
    (14) statement -> . NAME LPAREN expression RPAREN
    (15) statement -> . SHARP strings

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10
    SHARP           shift and go to state 11

    start                          shift and go to state 1
    bloc                           shift and go to state 2
    statement                      shift and go to state 3

state 1

    (0) S' -> start .



state 2

    (1) start -> bloc .
    (2) bloc -> bloc . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (12) statement -> . FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE
    (13) statement -> . NAME LPAREN RPAREN
    (14) statement -> . NAME LPAREN expression RPAREN
    (15) statement -> . SHARP strings

    $end            reduce using rule 1 (start -> bloc .)
    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10
    SHARP           shift and go to state 11

    statement                      shift and go to state 12

state 3

    (3) bloc -> statement . SEMI

    SEMI            shift and go to state 13


state 4

    (4) statement -> NAME . EQUALS expression
    (13) statement -> NAME . LPAREN RPAREN
    (14) statement -> NAME . LPAREN expression RPAREN

    EQUALS          shift and go to state 14
    LPAREN          shift and go to state 15


state 5

    (5) statement -> PRINT . LPAREN expression RPAREN

    LPAREN          shift and go to state 16


state 6

    (6) statement -> PRINTSTR . LPAREN strings RPAREN

    LPAREN          shift and go to state 17


state 7

    (7) statement -> IF . LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> IF . LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE

    LPAREN          shift and go to state 18


state 8

    (9) statement -> WHILE . LPAREN expression RPAREN LACCOLADE bloc RACCOLADE

    LPAREN          shift and go to state 19


state 9

    (10) statement -> FOR . LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE

    LPAREN          shift and go to state 20


state 10

    (11) statement -> FUNC . NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (12) statement -> FUNC . NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE

    NAME            shift and go to state 21


state 11

    (15) statement -> SHARP . strings
    (36) strings -> . NAME strings
    (37) strings -> . NAME

    NAME            shift and go to state 23

    strings                        shift and go to state 22

state 12

    (2) bloc -> bloc statement . SEMI

    SEMI            shift and go to state 24


state 13

    (3) bloc -> statement SEMI .

    NAME            reduce using rule 3 (bloc -> statement SEMI .)
    PRINT           reduce using rule 3 (bloc -> statement SEMI .)
    PRINTSTR        reduce using rule 3 (bloc -> statement SEMI .)
    IF              reduce using rule 3 (bloc -> statement SEMI .)
    WHILE           reduce using rule 3 (bloc -> statement SEMI .)
    FOR             reduce using rule 3 (bloc -> statement SEMI .)
    FUNC            reduce using rule 3 (bloc -> statement SEMI .)
    SHARP           reduce using rule 3 (bloc -> statement SEMI .)
    $end            reduce using rule 3 (bloc -> statement SEMI .)
    RACCOLADE       reduce using rule 3 (bloc -> statement SEMI .)


state 14

    (4) statement -> NAME EQUALS . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression INF expression
    (21) expression -> . expression SUP expression
    (22) expression -> . expression INFEQUAL expression
    (23) expression -> . expression SUPEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . expression BOOLEQUAL expression
    (27) expression -> . MINUS expression
    (28) expression -> . expression COMA expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 27
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 29
    NAME            shift and go to state 25

    expression                     shift and go to state 26

state 15

    (13) statement -> NAME LPAREN . RPAREN
    (14) statement -> NAME LPAREN . expression RPAREN
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression INF expression
    (21) expression -> . expression SUP expression
    (22) expression -> . expression INFEQUAL expression
    (23) expression -> . expression SUPEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . expression BOOLEQUAL expression
    (27) expression -> . MINUS expression
    (28) expression -> . expression COMA expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    RPAREN          shift and go to state 30
    MINUS           shift and go to state 27
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 29
    NAME            shift and go to state 25

    expression                     shift and go to state 31

state 16

    (5) statement -> PRINT LPAREN . expression RPAREN
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression INF expression
    (21) expression -> . expression SUP expression
    (22) expression -> . expression INFEQUAL expression
    (23) expression -> . expression SUPEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . expression BOOLEQUAL expression
    (27) expression -> . MINUS expression
    (28) expression -> . expression COMA expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 27
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 29
    NAME            shift and go to state 25

    expression                     shift and go to state 32

state 17

    (6) statement -> PRINTSTR LPAREN . strings RPAREN
    (36) strings -> . NAME strings
    (37) strings -> . NAME

    NAME            shift and go to state 23

    strings                        shift and go to state 33

state 18

    (7) statement -> IF LPAREN . expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> IF LPAREN . expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression INF expression
    (21) expression -> . expression SUP expression
    (22) expression -> . expression INFEQUAL expression
    (23) expression -> . expression SUPEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . expression BOOLEQUAL expression
    (27) expression -> . MINUS expression
    (28) expression -> . expression COMA expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 27
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 29
    NAME            shift and go to state 25

    expression                     shift and go to state 34

state 19

    (9) statement -> WHILE LPAREN . expression RPAREN LACCOLADE bloc RACCOLADE
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression INF expression
    (21) expression -> . expression SUP expression
    (22) expression -> . expression INFEQUAL expression
    (23) expression -> . expression SUPEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . expression BOOLEQUAL expression
    (27) expression -> . MINUS expression
    (28) expression -> . expression COMA expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 27
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 29
    NAME            shift and go to state 25

    expression                     shift and go to state 35

state 20

    (10) statement -> FOR LPAREN . NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE

    NAME            shift and go to state 36


state 21

    (11) statement -> FUNC NAME . LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (12) statement -> FUNC NAME . LPAREN param RPAREN LACCOLADE bloc RACCOLADE

    LPAREN          shift and go to state 37


state 22

    (15) statement -> SHARP strings .

    SEMI            reduce using rule 15 (statement -> SHARP strings .)


state 23

    (36) strings -> NAME . strings
    (37) strings -> NAME .
    (36) strings -> . NAME strings
    (37) strings -> . NAME

    SEMI            reduce using rule 37 (strings -> NAME .)
    RPAREN          reduce using rule 37 (strings -> NAME .)
    NAME            shift and go to state 23

    strings                        shift and go to state 38

state 24

    (2) bloc -> bloc statement SEMI .

    NAME            reduce using rule 2 (bloc -> bloc statement SEMI .)
    PRINT           reduce using rule 2 (bloc -> bloc statement SEMI .)
    PRINTSTR        reduce using rule 2 (bloc -> bloc statement SEMI .)
    IF              reduce using rule 2 (bloc -> bloc statement SEMI .)
    WHILE           reduce using rule 2 (bloc -> bloc statement SEMI .)
    FOR             reduce using rule 2 (bloc -> bloc statement SEMI .)
    FUNC            reduce using rule 2 (bloc -> bloc statement SEMI .)
    SHARP           reduce using rule 2 (bloc -> bloc statement SEMI .)
    $end            reduce using rule 2 (bloc -> bloc statement SEMI .)
    RACCOLADE       reduce using rule 2 (bloc -> bloc statement SEMI .)


state 25

    (31) expression -> NAME .

    PLUS            reduce using rule 31 (expression -> NAME .)
    MINUS           reduce using rule 31 (expression -> NAME .)
    TIMES           reduce using rule 31 (expression -> NAME .)
    DIVIDE          reduce using rule 31 (expression -> NAME .)
    INF             reduce using rule 31 (expression -> NAME .)
    SUP             reduce using rule 31 (expression -> NAME .)
    INFEQUAL        reduce using rule 31 (expression -> NAME .)
    SUPEQUAL        reduce using rule 31 (expression -> NAME .)
    AND             reduce using rule 31 (expression -> NAME .)
    OR              reduce using rule 31 (expression -> NAME .)
    BOOLEQUAL       reduce using rule 31 (expression -> NAME .)
    COMA            reduce using rule 31 (expression -> NAME .)
    SEMI            reduce using rule 31 (expression -> NAME .)
    RPAREN          reduce using rule 31 (expression -> NAME .)


state 26

    (4) statement -> NAME EQUALS expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . INF expression
    (21) expression -> expression . SUP expression
    (22) expression -> expression . INFEQUAL expression
    (23) expression -> expression . SUPEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (26) expression -> expression . BOOLEQUAL expression
    (28) expression -> expression . COMA expression

    SEMI            reduce using rule 4 (statement -> NAME EQUALS expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    INF             shift and go to state 43
    SUP             shift and go to state 44
    INFEQUAL        shift and go to state 45
    SUPEQUAL        shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    BOOLEQUAL       shift and go to state 49
    COMA            shift and go to state 50


state 27

    (27) expression -> MINUS . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression INF expression
    (21) expression -> . expression SUP expression
    (22) expression -> . expression INFEQUAL expression
    (23) expression -> . expression SUPEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . expression BOOLEQUAL expression
    (27) expression -> . MINUS expression
    (28) expression -> . expression COMA expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 27
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 29
    NAME            shift and go to state 25

    expression                     shift and go to state 51

state 28

    (29) expression -> LPAREN . expression RPAREN
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression INF expression
    (21) expression -> . expression SUP expression
    (22) expression -> . expression INFEQUAL expression
    (23) expression -> . expression SUPEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . expression BOOLEQUAL expression
    (27) expression -> . MINUS expression
    (28) expression -> . expression COMA expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 27
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 29
    NAME            shift and go to state 25

    expression                     shift and go to state 52

state 29

    (30) expression -> NUMBER .

    PLUS            reduce using rule 30 (expression -> NUMBER .)
    MINUS           reduce using rule 30 (expression -> NUMBER .)
    TIMES           reduce using rule 30 (expression -> NUMBER .)
    DIVIDE          reduce using rule 30 (expression -> NUMBER .)
    INF             reduce using rule 30 (expression -> NUMBER .)
    SUP             reduce using rule 30 (expression -> NUMBER .)
    INFEQUAL        reduce using rule 30 (expression -> NUMBER .)
    SUPEQUAL        reduce using rule 30 (expression -> NUMBER .)
    AND             reduce using rule 30 (expression -> NUMBER .)
    OR              reduce using rule 30 (expression -> NUMBER .)
    BOOLEQUAL       reduce using rule 30 (expression -> NUMBER .)
    COMA            reduce using rule 30 (expression -> NUMBER .)
    SEMI            reduce using rule 30 (expression -> NUMBER .)
    RPAREN          reduce using rule 30 (expression -> NUMBER .)


state 30

    (13) statement -> NAME LPAREN RPAREN .

    SEMI            reduce using rule 13 (statement -> NAME LPAREN RPAREN .)


state 31

    (14) statement -> NAME LPAREN expression . RPAREN
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . INF expression
    (21) expression -> expression . SUP expression
    (22) expression -> expression . INFEQUAL expression
    (23) expression -> expression . SUPEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (26) expression -> expression . BOOLEQUAL expression
    (28) expression -> expression . COMA expression

    RPAREN          shift and go to state 53
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    INF             shift and go to state 43
    SUP             shift and go to state 44
    INFEQUAL        shift and go to state 45
    SUPEQUAL        shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    BOOLEQUAL       shift and go to state 49
    COMA            shift and go to state 50


state 32

    (5) statement -> PRINT LPAREN expression . RPAREN
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . INF expression
    (21) expression -> expression . SUP expression
    (22) expression -> expression . INFEQUAL expression
    (23) expression -> expression . SUPEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (26) expression -> expression . BOOLEQUAL expression
    (28) expression -> expression . COMA expression

    RPAREN          shift and go to state 54
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    INF             shift and go to state 43
    SUP             shift and go to state 44
    INFEQUAL        shift and go to state 45
    SUPEQUAL        shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    BOOLEQUAL       shift and go to state 49
    COMA            shift and go to state 50


state 33

    (6) statement -> PRINTSTR LPAREN strings . RPAREN

    RPAREN          shift and go to state 55


state 34

    (7) statement -> IF LPAREN expression . RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> IF LPAREN expression . RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . INF expression
    (21) expression -> expression . SUP expression
    (22) expression -> expression . INFEQUAL expression
    (23) expression -> expression . SUPEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (26) expression -> expression . BOOLEQUAL expression
    (28) expression -> expression . COMA expression

    RPAREN          shift and go to state 56
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    INF             shift and go to state 43
    SUP             shift and go to state 44
    INFEQUAL        shift and go to state 45
    SUPEQUAL        shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    BOOLEQUAL       shift and go to state 49
    COMA            shift and go to state 50


state 35

    (9) statement -> WHILE LPAREN expression . RPAREN LACCOLADE bloc RACCOLADE
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . INF expression
    (21) expression -> expression . SUP expression
    (22) expression -> expression . INFEQUAL expression
    (23) expression -> expression . SUPEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (26) expression -> expression . BOOLEQUAL expression
    (28) expression -> expression . COMA expression

    RPAREN          shift and go to state 57
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    INF             shift and go to state 43
    SUP             shift and go to state 44
    INFEQUAL        shift and go to state 45
    SUPEQUAL        shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    BOOLEQUAL       shift and go to state 49
    COMA            shift and go to state 50


state 36

    (10) statement -> FOR LPAREN NAME . EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE

    EQUALS          shift and go to state 58


state 37

    (11) statement -> FUNC NAME LPAREN . RPAREN LACCOLADE bloc RACCOLADE
    (12) statement -> FUNC NAME LPAREN . param RPAREN LACCOLADE bloc RACCOLADE
    (32) param -> . NAME COMA param
    (33) param -> . NAME EQUALS expression COMA param
    (34) param -> . NAME EQUALS expression
    (35) param -> . NAME

    RPAREN          shift and go to state 60
    NAME            shift and go to state 59

    param                          shift and go to state 61

state 38

    (36) strings -> NAME strings .

    SEMI            reduce using rule 36 (strings -> NAME strings .)
    RPAREN          reduce using rule 36 (strings -> NAME strings .)


state 39

    (16) expression -> expression PLUS . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression INF expression
    (21) expression -> . expression SUP expression
    (22) expression -> . expression INFEQUAL expression
    (23) expression -> . expression SUPEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . expression BOOLEQUAL expression
    (27) expression -> . MINUS expression
    (28) expression -> . expression COMA expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 27
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 29
    NAME            shift and go to state 25

    expression                     shift and go to state 62

state 40

    (17) expression -> expression MINUS . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression INF expression
    (21) expression -> . expression SUP expression
    (22) expression -> . expression INFEQUAL expression
    (23) expression -> . expression SUPEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . expression BOOLEQUAL expression
    (27) expression -> . MINUS expression
    (28) expression -> . expression COMA expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 27
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 29
    NAME            shift and go to state 25

    expression                     shift and go to state 63

state 41

    (18) expression -> expression TIMES . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression INF expression
    (21) expression -> . expression SUP expression
    (22) expression -> . expression INFEQUAL expression
    (23) expression -> . expression SUPEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . expression BOOLEQUAL expression
    (27) expression -> . MINUS expression
    (28) expression -> . expression COMA expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 27
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 29
    NAME            shift and go to state 25

    expression                     shift and go to state 64

state 42

    (19) expression -> expression DIVIDE . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression INF expression
    (21) expression -> . expression SUP expression
    (22) expression -> . expression INFEQUAL expression
    (23) expression -> . expression SUPEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . expression BOOLEQUAL expression
    (27) expression -> . MINUS expression
    (28) expression -> . expression COMA expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 27
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 29
    NAME            shift and go to state 25

    expression                     shift and go to state 65

state 43

    (20) expression -> expression INF . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression INF expression
    (21) expression -> . expression SUP expression
    (22) expression -> . expression INFEQUAL expression
    (23) expression -> . expression SUPEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . expression BOOLEQUAL expression
    (27) expression -> . MINUS expression
    (28) expression -> . expression COMA expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 27
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 29
    NAME            shift and go to state 25

    expression                     shift and go to state 66

state 44

    (21) expression -> expression SUP . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression INF expression
    (21) expression -> . expression SUP expression
    (22) expression -> . expression INFEQUAL expression
    (23) expression -> . expression SUPEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . expression BOOLEQUAL expression
    (27) expression -> . MINUS expression
    (28) expression -> . expression COMA expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 27
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 29
    NAME            shift and go to state 25

    expression                     shift and go to state 67

state 45

    (22) expression -> expression INFEQUAL . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression INF expression
    (21) expression -> . expression SUP expression
    (22) expression -> . expression INFEQUAL expression
    (23) expression -> . expression SUPEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . expression BOOLEQUAL expression
    (27) expression -> . MINUS expression
    (28) expression -> . expression COMA expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 27
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 29
    NAME            shift and go to state 25

    expression                     shift and go to state 68

state 46

    (23) expression -> expression SUPEQUAL . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression INF expression
    (21) expression -> . expression SUP expression
    (22) expression -> . expression INFEQUAL expression
    (23) expression -> . expression SUPEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . expression BOOLEQUAL expression
    (27) expression -> . MINUS expression
    (28) expression -> . expression COMA expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 27
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 29
    NAME            shift and go to state 25

    expression                     shift and go to state 69

state 47

    (24) expression -> expression AND . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression INF expression
    (21) expression -> . expression SUP expression
    (22) expression -> . expression INFEQUAL expression
    (23) expression -> . expression SUPEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . expression BOOLEQUAL expression
    (27) expression -> . MINUS expression
    (28) expression -> . expression COMA expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 27
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 29
    NAME            shift and go to state 25

    expression                     shift and go to state 70

state 48

    (25) expression -> expression OR . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression INF expression
    (21) expression -> . expression SUP expression
    (22) expression -> . expression INFEQUAL expression
    (23) expression -> . expression SUPEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . expression BOOLEQUAL expression
    (27) expression -> . MINUS expression
    (28) expression -> . expression COMA expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 27
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 29
    NAME            shift and go to state 25

    expression                     shift and go to state 71

state 49

    (26) expression -> expression BOOLEQUAL . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression INF expression
    (21) expression -> . expression SUP expression
    (22) expression -> . expression INFEQUAL expression
    (23) expression -> . expression SUPEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . expression BOOLEQUAL expression
    (27) expression -> . MINUS expression
    (28) expression -> . expression COMA expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 27
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 29
    NAME            shift and go to state 25

    expression                     shift and go to state 72

state 50

    (28) expression -> expression COMA . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression INF expression
    (21) expression -> . expression SUP expression
    (22) expression -> . expression INFEQUAL expression
    (23) expression -> . expression SUPEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . expression BOOLEQUAL expression
    (27) expression -> . MINUS expression
    (28) expression -> . expression COMA expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 27
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 29
    NAME            shift and go to state 25

    expression                     shift and go to state 73

state 51

    (27) expression -> MINUS expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . INF expression
    (21) expression -> expression . SUP expression
    (22) expression -> expression . INFEQUAL expression
    (23) expression -> expression . SUPEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (26) expression -> expression . BOOLEQUAL expression
    (28) expression -> expression . COMA expression

    PLUS            reduce using rule 27 (expression -> MINUS expression .)
    MINUS           reduce using rule 27 (expression -> MINUS expression .)
    INF             reduce using rule 27 (expression -> MINUS expression .)
    SUP             reduce using rule 27 (expression -> MINUS expression .)
    INFEQUAL        reduce using rule 27 (expression -> MINUS expression .)
    SUPEQUAL        reduce using rule 27 (expression -> MINUS expression .)
    AND             reduce using rule 27 (expression -> MINUS expression .)
    OR              reduce using rule 27 (expression -> MINUS expression .)
    BOOLEQUAL       reduce using rule 27 (expression -> MINUS expression .)
    COMA            reduce using rule 27 (expression -> MINUS expression .)
    SEMI            reduce using rule 27 (expression -> MINUS expression .)
    RPAREN          reduce using rule 27 (expression -> MINUS expression .)
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42

  ! TIMES           [ reduce using rule 27 (expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]
  ! INF             [ shift and go to state 43 ]
  ! SUP             [ shift and go to state 44 ]
  ! INFEQUAL        [ shift and go to state 45 ]
  ! SUPEQUAL        [ shift and go to state 46 ]
  ! AND             [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! BOOLEQUAL       [ shift and go to state 49 ]
  ! COMA            [ shift and go to state 50 ]


state 52

    (29) expression -> LPAREN expression . RPAREN
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . INF expression
    (21) expression -> expression . SUP expression
    (22) expression -> expression . INFEQUAL expression
    (23) expression -> expression . SUPEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (26) expression -> expression . BOOLEQUAL expression
    (28) expression -> expression . COMA expression

    RPAREN          shift and go to state 74
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    INF             shift and go to state 43
    SUP             shift and go to state 44
    INFEQUAL        shift and go to state 45
    SUPEQUAL        shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    BOOLEQUAL       shift and go to state 49
    COMA            shift and go to state 50


state 53

    (14) statement -> NAME LPAREN expression RPAREN .

    SEMI            reduce using rule 14 (statement -> NAME LPAREN expression RPAREN .)


state 54

    (5) statement -> PRINT LPAREN expression RPAREN .

    SEMI            reduce using rule 5 (statement -> PRINT LPAREN expression RPAREN .)


state 55

    (6) statement -> PRINTSTR LPAREN strings RPAREN .

    SEMI            reduce using rule 6 (statement -> PRINTSTR LPAREN strings RPAREN .)


state 56

    (7) statement -> IF LPAREN expression RPAREN . LACCOLADE bloc RACCOLADE
    (8) statement -> IF LPAREN expression RPAREN . LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE

    LACCOLADE       shift and go to state 75


state 57

    (9) statement -> WHILE LPAREN expression RPAREN . LACCOLADE bloc RACCOLADE

    LACCOLADE       shift and go to state 76


state 58

    (10) statement -> FOR LPAREN NAME EQUALS . expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression INF expression
    (21) expression -> . expression SUP expression
    (22) expression -> . expression INFEQUAL expression
    (23) expression -> . expression SUPEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . expression BOOLEQUAL expression
    (27) expression -> . MINUS expression
    (28) expression -> . expression COMA expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 27
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 29
    NAME            shift and go to state 25

    expression                     shift and go to state 77

state 59

    (32) param -> NAME . COMA param
    (33) param -> NAME . EQUALS expression COMA param
    (34) param -> NAME . EQUALS expression
    (35) param -> NAME .

    COMA            shift and go to state 78
    EQUALS          shift and go to state 79
    RPAREN          reduce using rule 35 (param -> NAME .)


state 60

    (11) statement -> FUNC NAME LPAREN RPAREN . LACCOLADE bloc RACCOLADE

    LACCOLADE       shift and go to state 80


state 61

    (12) statement -> FUNC NAME LPAREN param . RPAREN LACCOLADE bloc RACCOLADE

    RPAREN          shift and go to state 81


state 62

    (16) expression -> expression PLUS expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . INF expression
    (21) expression -> expression . SUP expression
    (22) expression -> expression . INFEQUAL expression
    (23) expression -> expression . SUPEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (26) expression -> expression . BOOLEQUAL expression
    (28) expression -> expression . COMA expression

    PLUS            reduce using rule 16 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 16 (expression -> expression PLUS expression .)
    INF             reduce using rule 16 (expression -> expression PLUS expression .)
    SUP             reduce using rule 16 (expression -> expression PLUS expression .)
    INFEQUAL        reduce using rule 16 (expression -> expression PLUS expression .)
    SUPEQUAL        reduce using rule 16 (expression -> expression PLUS expression .)
    AND             reduce using rule 16 (expression -> expression PLUS expression .)
    OR              reduce using rule 16 (expression -> expression PLUS expression .)
    BOOLEQUAL       reduce using rule 16 (expression -> expression PLUS expression .)
    COMA            reduce using rule 16 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 16 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 16 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42

  ! TIMES           [ reduce using rule 16 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]
  ! INF             [ shift and go to state 43 ]
  ! SUP             [ shift and go to state 44 ]
  ! INFEQUAL        [ shift and go to state 45 ]
  ! SUPEQUAL        [ shift and go to state 46 ]
  ! AND             [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! BOOLEQUAL       [ shift and go to state 49 ]
  ! COMA            [ shift and go to state 50 ]


state 63

    (17) expression -> expression MINUS expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . INF expression
    (21) expression -> expression . SUP expression
    (22) expression -> expression . INFEQUAL expression
    (23) expression -> expression . SUPEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (26) expression -> expression . BOOLEQUAL expression
    (28) expression -> expression . COMA expression

    PLUS            reduce using rule 17 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 17 (expression -> expression MINUS expression .)
    INF             reduce using rule 17 (expression -> expression MINUS expression .)
    SUP             reduce using rule 17 (expression -> expression MINUS expression .)
    INFEQUAL        reduce using rule 17 (expression -> expression MINUS expression .)
    SUPEQUAL        reduce using rule 17 (expression -> expression MINUS expression .)
    AND             reduce using rule 17 (expression -> expression MINUS expression .)
    OR              reduce using rule 17 (expression -> expression MINUS expression .)
    BOOLEQUAL       reduce using rule 17 (expression -> expression MINUS expression .)
    COMA            reduce using rule 17 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 17 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 17 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42

  ! TIMES           [ reduce using rule 17 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]
  ! INF             [ shift and go to state 43 ]
  ! SUP             [ shift and go to state 44 ]
  ! INFEQUAL        [ shift and go to state 45 ]
  ! SUPEQUAL        [ shift and go to state 46 ]
  ! AND             [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! BOOLEQUAL       [ shift and go to state 49 ]
  ! COMA            [ shift and go to state 50 ]


state 64

    (18) expression -> expression TIMES expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . INF expression
    (21) expression -> expression . SUP expression
    (22) expression -> expression . INFEQUAL expression
    (23) expression -> expression . SUPEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (26) expression -> expression . BOOLEQUAL expression
    (28) expression -> expression . COMA expression

    PLUS            reduce using rule 18 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 18 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 18 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 18 (expression -> expression TIMES expression .)
    INF             reduce using rule 18 (expression -> expression TIMES expression .)
    SUP             reduce using rule 18 (expression -> expression TIMES expression .)
    INFEQUAL        reduce using rule 18 (expression -> expression TIMES expression .)
    SUPEQUAL        reduce using rule 18 (expression -> expression TIMES expression .)
    AND             reduce using rule 18 (expression -> expression TIMES expression .)
    OR              reduce using rule 18 (expression -> expression TIMES expression .)
    BOOLEQUAL       reduce using rule 18 (expression -> expression TIMES expression .)
    COMA            reduce using rule 18 (expression -> expression TIMES expression .)
    SEMI            reduce using rule 18 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 18 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]
  ! TIMES           [ shift and go to state 41 ]
  ! DIVIDE          [ shift and go to state 42 ]
  ! INF             [ shift and go to state 43 ]
  ! SUP             [ shift and go to state 44 ]
  ! INFEQUAL        [ shift and go to state 45 ]
  ! SUPEQUAL        [ shift and go to state 46 ]
  ! AND             [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! BOOLEQUAL       [ shift and go to state 49 ]
  ! COMA            [ shift and go to state 50 ]


state 65

    (19) expression -> expression DIVIDE expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . INF expression
    (21) expression -> expression . SUP expression
    (22) expression -> expression . INFEQUAL expression
    (23) expression -> expression . SUPEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (26) expression -> expression . BOOLEQUAL expression
    (28) expression -> expression . COMA expression

    PLUS            reduce using rule 19 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 19 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 19 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 19 (expression -> expression DIVIDE expression .)
    INF             reduce using rule 19 (expression -> expression DIVIDE expression .)
    SUP             reduce using rule 19 (expression -> expression DIVIDE expression .)
    INFEQUAL        reduce using rule 19 (expression -> expression DIVIDE expression .)
    SUPEQUAL        reduce using rule 19 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 19 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 19 (expression -> expression DIVIDE expression .)
    BOOLEQUAL       reduce using rule 19 (expression -> expression DIVIDE expression .)
    COMA            reduce using rule 19 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 19 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 19 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]
  ! TIMES           [ shift and go to state 41 ]
  ! DIVIDE          [ shift and go to state 42 ]
  ! INF             [ shift and go to state 43 ]
  ! SUP             [ shift and go to state 44 ]
  ! INFEQUAL        [ shift and go to state 45 ]
  ! SUPEQUAL        [ shift and go to state 46 ]
  ! AND             [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! BOOLEQUAL       [ shift and go to state 49 ]
  ! COMA            [ shift and go to state 50 ]


state 66

    (20) expression -> expression INF expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . INF expression
    (21) expression -> expression . SUP expression
    (22) expression -> expression . INFEQUAL expression
    (23) expression -> expression . SUPEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (26) expression -> expression . BOOLEQUAL expression
    (28) expression -> expression . COMA expression

    INF             reduce using rule 20 (expression -> expression INF expression .)
    SUP             reduce using rule 20 (expression -> expression INF expression .)
    INFEQUAL        reduce using rule 20 (expression -> expression INF expression .)
    SUPEQUAL        reduce using rule 20 (expression -> expression INF expression .)
    AND             reduce using rule 20 (expression -> expression INF expression .)
    OR              reduce using rule 20 (expression -> expression INF expression .)
    BOOLEQUAL       reduce using rule 20 (expression -> expression INF expression .)
    COMA            reduce using rule 20 (expression -> expression INF expression .)
    SEMI            reduce using rule 20 (expression -> expression INF expression .)
    RPAREN          reduce using rule 20 (expression -> expression INF expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42

  ! PLUS            [ reduce using rule 20 (expression -> expression INF expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression INF expression .) ]
  ! TIMES           [ reduce using rule 20 (expression -> expression INF expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression INF expression .) ]
  ! INF             [ shift and go to state 43 ]
  ! SUP             [ shift and go to state 44 ]
  ! INFEQUAL        [ shift and go to state 45 ]
  ! SUPEQUAL        [ shift and go to state 46 ]
  ! AND             [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! BOOLEQUAL       [ shift and go to state 49 ]
  ! COMA            [ shift and go to state 50 ]


state 67

    (21) expression -> expression SUP expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . INF expression
    (21) expression -> expression . SUP expression
    (22) expression -> expression . INFEQUAL expression
    (23) expression -> expression . SUPEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (26) expression -> expression . BOOLEQUAL expression
    (28) expression -> expression . COMA expression

    INF             reduce using rule 21 (expression -> expression SUP expression .)
    SUP             reduce using rule 21 (expression -> expression SUP expression .)
    INFEQUAL        reduce using rule 21 (expression -> expression SUP expression .)
    SUPEQUAL        reduce using rule 21 (expression -> expression SUP expression .)
    AND             reduce using rule 21 (expression -> expression SUP expression .)
    OR              reduce using rule 21 (expression -> expression SUP expression .)
    BOOLEQUAL       reduce using rule 21 (expression -> expression SUP expression .)
    COMA            reduce using rule 21 (expression -> expression SUP expression .)
    SEMI            reduce using rule 21 (expression -> expression SUP expression .)
    RPAREN          reduce using rule 21 (expression -> expression SUP expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42

  ! PLUS            [ reduce using rule 21 (expression -> expression SUP expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression SUP expression .) ]
  ! TIMES           [ reduce using rule 21 (expression -> expression SUP expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression SUP expression .) ]
  ! INF             [ shift and go to state 43 ]
  ! SUP             [ shift and go to state 44 ]
  ! INFEQUAL        [ shift and go to state 45 ]
  ! SUPEQUAL        [ shift and go to state 46 ]
  ! AND             [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! BOOLEQUAL       [ shift and go to state 49 ]
  ! COMA            [ shift and go to state 50 ]


state 68

    (22) expression -> expression INFEQUAL expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . INF expression
    (21) expression -> expression . SUP expression
    (22) expression -> expression . INFEQUAL expression
    (23) expression -> expression . SUPEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (26) expression -> expression . BOOLEQUAL expression
    (28) expression -> expression . COMA expression

    INF             reduce using rule 22 (expression -> expression INFEQUAL expression .)
    SUP             reduce using rule 22 (expression -> expression INFEQUAL expression .)
    INFEQUAL        reduce using rule 22 (expression -> expression INFEQUAL expression .)
    SUPEQUAL        reduce using rule 22 (expression -> expression INFEQUAL expression .)
    AND             reduce using rule 22 (expression -> expression INFEQUAL expression .)
    OR              reduce using rule 22 (expression -> expression INFEQUAL expression .)
    BOOLEQUAL       reduce using rule 22 (expression -> expression INFEQUAL expression .)
    COMA            reduce using rule 22 (expression -> expression INFEQUAL expression .)
    SEMI            reduce using rule 22 (expression -> expression INFEQUAL expression .)
    RPAREN          reduce using rule 22 (expression -> expression INFEQUAL expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42

  ! PLUS            [ reduce using rule 22 (expression -> expression INFEQUAL expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> expression INFEQUAL expression .) ]
  ! TIMES           [ reduce using rule 22 (expression -> expression INFEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression INFEQUAL expression .) ]
  ! INF             [ shift and go to state 43 ]
  ! SUP             [ shift and go to state 44 ]
  ! INFEQUAL        [ shift and go to state 45 ]
  ! SUPEQUAL        [ shift and go to state 46 ]
  ! AND             [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! BOOLEQUAL       [ shift and go to state 49 ]
  ! COMA            [ shift and go to state 50 ]


state 69

    (23) expression -> expression SUPEQUAL expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . INF expression
    (21) expression -> expression . SUP expression
    (22) expression -> expression . INFEQUAL expression
    (23) expression -> expression . SUPEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (26) expression -> expression . BOOLEQUAL expression
    (28) expression -> expression . COMA expression

    INF             reduce using rule 23 (expression -> expression SUPEQUAL expression .)
    SUP             reduce using rule 23 (expression -> expression SUPEQUAL expression .)
    INFEQUAL        reduce using rule 23 (expression -> expression SUPEQUAL expression .)
    SUPEQUAL        reduce using rule 23 (expression -> expression SUPEQUAL expression .)
    AND             reduce using rule 23 (expression -> expression SUPEQUAL expression .)
    OR              reduce using rule 23 (expression -> expression SUPEQUAL expression .)
    BOOLEQUAL       reduce using rule 23 (expression -> expression SUPEQUAL expression .)
    COMA            reduce using rule 23 (expression -> expression SUPEQUAL expression .)
    SEMI            reduce using rule 23 (expression -> expression SUPEQUAL expression .)
    RPAREN          reduce using rule 23 (expression -> expression SUPEQUAL expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42

  ! PLUS            [ reduce using rule 23 (expression -> expression SUPEQUAL expression .) ]
  ! MINUS           [ reduce using rule 23 (expression -> expression SUPEQUAL expression .) ]
  ! TIMES           [ reduce using rule 23 (expression -> expression SUPEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression SUPEQUAL expression .) ]
  ! INF             [ shift and go to state 43 ]
  ! SUP             [ shift and go to state 44 ]
  ! INFEQUAL        [ shift and go to state 45 ]
  ! SUPEQUAL        [ shift and go to state 46 ]
  ! AND             [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! BOOLEQUAL       [ shift and go to state 49 ]
  ! COMA            [ shift and go to state 50 ]


state 70

    (24) expression -> expression AND expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . INF expression
    (21) expression -> expression . SUP expression
    (22) expression -> expression . INFEQUAL expression
    (23) expression -> expression . SUPEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (26) expression -> expression . BOOLEQUAL expression
    (28) expression -> expression . COMA expression

    AND             reduce using rule 24 (expression -> expression AND expression .)
    OR              reduce using rule 24 (expression -> expression AND expression .)
    COMA            reduce using rule 24 (expression -> expression AND expression .)
    SEMI            reduce using rule 24 (expression -> expression AND expression .)
    RPAREN          reduce using rule 24 (expression -> expression AND expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    INF             shift and go to state 43
    SUP             shift and go to state 44
    INFEQUAL        shift and go to state 45
    SUPEQUAL        shift and go to state 46
    BOOLEQUAL       shift and go to state 49

  ! PLUS            [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! INF             [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! SUP             [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! INFEQUAL        [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! SUPEQUAL        [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! BOOLEQUAL       [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! COMA            [ shift and go to state 50 ]


state 71

    (25) expression -> expression OR expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . INF expression
    (21) expression -> expression . SUP expression
    (22) expression -> expression . INFEQUAL expression
    (23) expression -> expression . SUPEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (26) expression -> expression . BOOLEQUAL expression
    (28) expression -> expression . COMA expression

    OR              reduce using rule 25 (expression -> expression OR expression .)
    COMA            reduce using rule 25 (expression -> expression OR expression .)
    SEMI            reduce using rule 25 (expression -> expression OR expression .)
    RPAREN          reduce using rule 25 (expression -> expression OR expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    INF             shift and go to state 43
    SUP             shift and go to state 44
    INFEQUAL        shift and go to state 45
    SUPEQUAL        shift and go to state 46
    AND             shift and go to state 47
    BOOLEQUAL       shift and go to state 49

  ! PLUS            [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! INF             [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! SUP             [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! INFEQUAL        [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! SUPEQUAL        [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! BOOLEQUAL       [ reduce using rule 25 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 48 ]
  ! COMA            [ shift and go to state 50 ]


state 72

    (26) expression -> expression BOOLEQUAL expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . INF expression
    (21) expression -> expression . SUP expression
    (22) expression -> expression . INFEQUAL expression
    (23) expression -> expression . SUPEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (26) expression -> expression . BOOLEQUAL expression
    (28) expression -> expression . COMA expression

    INF             reduce using rule 26 (expression -> expression BOOLEQUAL expression .)
    SUP             reduce using rule 26 (expression -> expression BOOLEQUAL expression .)
    INFEQUAL        reduce using rule 26 (expression -> expression BOOLEQUAL expression .)
    SUPEQUAL        reduce using rule 26 (expression -> expression BOOLEQUAL expression .)
    AND             reduce using rule 26 (expression -> expression BOOLEQUAL expression .)
    OR              reduce using rule 26 (expression -> expression BOOLEQUAL expression .)
    BOOLEQUAL       reduce using rule 26 (expression -> expression BOOLEQUAL expression .)
    COMA            reduce using rule 26 (expression -> expression BOOLEQUAL expression .)
    SEMI            reduce using rule 26 (expression -> expression BOOLEQUAL expression .)
    RPAREN          reduce using rule 26 (expression -> expression BOOLEQUAL expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42

  ! PLUS            [ reduce using rule 26 (expression -> expression BOOLEQUAL expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> expression BOOLEQUAL expression .) ]
  ! TIMES           [ reduce using rule 26 (expression -> expression BOOLEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression BOOLEQUAL expression .) ]
  ! INF             [ shift and go to state 43 ]
  ! SUP             [ shift and go to state 44 ]
  ! INFEQUAL        [ shift and go to state 45 ]
  ! SUPEQUAL        [ shift and go to state 46 ]
  ! AND             [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! BOOLEQUAL       [ shift and go to state 49 ]
  ! COMA            [ shift and go to state 50 ]


state 73

    (28) expression -> expression COMA expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . INF expression
    (21) expression -> expression . SUP expression
    (22) expression -> expression . INFEQUAL expression
    (23) expression -> expression . SUPEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (26) expression -> expression . BOOLEQUAL expression
    (28) expression -> expression . COMA expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for INF resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFEQUAL resolved as shift
  ! shift/reduce conflict for SUPEQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for BOOLEQUAL resolved as shift
  ! shift/reduce conflict for COMA resolved as shift
    SEMI            reduce using rule 28 (expression -> expression COMA expression .)
    RPAREN          reduce using rule 28 (expression -> expression COMA expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    INF             shift and go to state 43
    SUP             shift and go to state 44
    INFEQUAL        shift and go to state 45
    SUPEQUAL        shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    BOOLEQUAL       shift and go to state 49
    COMA            shift and go to state 50

  ! PLUS            [ reduce using rule 28 (expression -> expression COMA expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression COMA expression .) ]
  ! TIMES           [ reduce using rule 28 (expression -> expression COMA expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression COMA expression .) ]
  ! INF             [ reduce using rule 28 (expression -> expression COMA expression .) ]
  ! SUP             [ reduce using rule 28 (expression -> expression COMA expression .) ]
  ! INFEQUAL        [ reduce using rule 28 (expression -> expression COMA expression .) ]
  ! SUPEQUAL        [ reduce using rule 28 (expression -> expression COMA expression .) ]
  ! AND             [ reduce using rule 28 (expression -> expression COMA expression .) ]
  ! OR              [ reduce using rule 28 (expression -> expression COMA expression .) ]
  ! BOOLEQUAL       [ reduce using rule 28 (expression -> expression COMA expression .) ]
  ! COMA            [ reduce using rule 28 (expression -> expression COMA expression .) ]


state 74

    (29) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    INF             reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    SUP             reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    INFEQUAL        reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    SUPEQUAL        reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    BOOLEQUAL       reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    COMA            reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 29 (expression -> LPAREN expression RPAREN .)


state 75

    (7) statement -> IF LPAREN expression RPAREN LACCOLADE . bloc RACCOLADE
    (8) statement -> IF LPAREN expression RPAREN LACCOLADE . bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (2) bloc -> . bloc statement SEMI
    (3) bloc -> . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (12) statement -> . FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE
    (13) statement -> . NAME LPAREN RPAREN
    (14) statement -> . NAME LPAREN expression RPAREN
    (15) statement -> . SHARP strings

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10
    SHARP           shift and go to state 11

    bloc                           shift and go to state 82
    statement                      shift and go to state 3

state 76

    (9) statement -> WHILE LPAREN expression RPAREN LACCOLADE . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMI
    (3) bloc -> . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (12) statement -> . FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE
    (13) statement -> . NAME LPAREN RPAREN
    (14) statement -> . NAME LPAREN expression RPAREN
    (15) statement -> . SHARP strings

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10
    SHARP           shift and go to state 11

    bloc                           shift and go to state 83
    statement                      shift and go to state 3

state 77

    (10) statement -> FOR LPAREN NAME EQUALS expression . SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . INF expression
    (21) expression -> expression . SUP expression
    (22) expression -> expression . INFEQUAL expression
    (23) expression -> expression . SUPEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (26) expression -> expression . BOOLEQUAL expression
    (28) expression -> expression . COMA expression

    SEMI            shift and go to state 84
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    INF             shift and go to state 43
    SUP             shift and go to state 44
    INFEQUAL        shift and go to state 45
    SUPEQUAL        shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    BOOLEQUAL       shift and go to state 49
    COMA            shift and go to state 50


state 78

    (32) param -> NAME COMA . param
    (32) param -> . NAME COMA param
    (33) param -> . NAME EQUALS expression COMA param
    (34) param -> . NAME EQUALS expression
    (35) param -> . NAME

    NAME            shift and go to state 59

    param                          shift and go to state 85

state 79

    (33) param -> NAME EQUALS . expression COMA param
    (34) param -> NAME EQUALS . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression INF expression
    (21) expression -> . expression SUP expression
    (22) expression -> . expression INFEQUAL expression
    (23) expression -> . expression SUPEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . expression BOOLEQUAL expression
    (27) expression -> . MINUS expression
    (28) expression -> . expression COMA expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 27
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 29
    NAME            shift and go to state 25

    expression                     shift and go to state 86

state 80

    (11) statement -> FUNC NAME LPAREN RPAREN LACCOLADE . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMI
    (3) bloc -> . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (12) statement -> . FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE
    (13) statement -> . NAME LPAREN RPAREN
    (14) statement -> . NAME LPAREN expression RPAREN
    (15) statement -> . SHARP strings

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10
    SHARP           shift and go to state 11

    bloc                           shift and go to state 87
    statement                      shift and go to state 3

state 81

    (12) statement -> FUNC NAME LPAREN param RPAREN . LACCOLADE bloc RACCOLADE

    LACCOLADE       shift and go to state 88


state 82

    (7) statement -> IF LPAREN expression RPAREN LACCOLADE bloc . RACCOLADE
    (8) statement -> IF LPAREN expression RPAREN LACCOLADE bloc . RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (2) bloc -> bloc . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (12) statement -> . FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE
    (13) statement -> . NAME LPAREN RPAREN
    (14) statement -> . NAME LPAREN expression RPAREN
    (15) statement -> . SHARP strings

    RACCOLADE       shift and go to state 89
    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10
    SHARP           shift and go to state 11

    statement                      shift and go to state 12

state 83

    (9) statement -> WHILE LPAREN expression RPAREN LACCOLADE bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (12) statement -> . FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE
    (13) statement -> . NAME LPAREN RPAREN
    (14) statement -> . NAME LPAREN expression RPAREN
    (15) statement -> . SHARP strings

    RACCOLADE       shift and go to state 90
    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10
    SHARP           shift and go to state 11

    statement                      shift and go to state 12

state 84

    (10) statement -> FOR LPAREN NAME EQUALS expression SEMI . expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression INF expression
    (21) expression -> . expression SUP expression
    (22) expression -> . expression INFEQUAL expression
    (23) expression -> . expression SUPEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . expression BOOLEQUAL expression
    (27) expression -> . MINUS expression
    (28) expression -> . expression COMA expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 27
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 29
    NAME            shift and go to state 25

    expression                     shift and go to state 91

state 85

    (32) param -> NAME COMA param .

    RPAREN          reduce using rule 32 (param -> NAME COMA param .)


state 86

    (33) param -> NAME EQUALS expression . COMA param
    (34) param -> NAME EQUALS expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . INF expression
    (21) expression -> expression . SUP expression
    (22) expression -> expression . INFEQUAL expression
    (23) expression -> expression . SUPEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (26) expression -> expression . BOOLEQUAL expression
    (28) expression -> expression . COMA expression

    COMA            shift and go to state 92
    RPAREN          reduce using rule 34 (param -> NAME EQUALS expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    INF             shift and go to state 43
    SUP             shift and go to state 44
    INFEQUAL        shift and go to state 45
    SUPEQUAL        shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    BOOLEQUAL       shift and go to state 49


state 87

    (11) statement -> FUNC NAME LPAREN RPAREN LACCOLADE bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (12) statement -> . FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE
    (13) statement -> . NAME LPAREN RPAREN
    (14) statement -> . NAME LPAREN expression RPAREN
    (15) statement -> . SHARP strings

    RACCOLADE       shift and go to state 93
    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10
    SHARP           shift and go to state 11

    statement                      shift and go to state 12

state 88

    (12) statement -> FUNC NAME LPAREN param RPAREN LACCOLADE . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMI
    (3) bloc -> . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (12) statement -> . FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE
    (13) statement -> . NAME LPAREN RPAREN
    (14) statement -> . NAME LPAREN expression RPAREN
    (15) statement -> . SHARP strings

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10
    SHARP           shift and go to state 11

    bloc                           shift and go to state 94
    statement                      shift and go to state 3

state 89

    (7) statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE .
    (8) statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE . ELSE LACCOLADE bloc RACCOLADE

    SEMI            reduce using rule 7 (statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE .)
    ELSE            shift and go to state 95


state 90

    (9) statement -> WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE .

    SEMI            reduce using rule 9 (statement -> WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE .)


state 91

    (10) statement -> FOR LPAREN NAME EQUALS expression SEMI expression . SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . INF expression
    (21) expression -> expression . SUP expression
    (22) expression -> expression . INFEQUAL expression
    (23) expression -> expression . SUPEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (26) expression -> expression . BOOLEQUAL expression
    (28) expression -> expression . COMA expression

    SEMI            shift and go to state 96
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    INF             shift and go to state 43
    SUP             shift and go to state 44
    INFEQUAL        shift and go to state 45
    SUPEQUAL        shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    BOOLEQUAL       shift and go to state 49
    COMA            shift and go to state 50


state 92

    (33) param -> NAME EQUALS expression COMA . param
    (28) expression -> expression COMA . expression
    (32) param -> . NAME COMA param
    (33) param -> . NAME EQUALS expression COMA param
    (34) param -> . NAME EQUALS expression
    (35) param -> . NAME
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression INF expression
    (21) expression -> . expression SUP expression
    (22) expression -> . expression INFEQUAL expression
    (23) expression -> . expression SUPEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . expression BOOLEQUAL expression
    (27) expression -> . MINUS expression
    (28) expression -> . expression COMA expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    NAME            shift and go to state 97
    MINUS           shift and go to state 27
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 29

    expression                     shift and go to state 73
    param                          shift and go to state 98

state 93

    (11) statement -> FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE .

    SEMI            reduce using rule 11 (statement -> FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE .)


state 94

    (12) statement -> FUNC NAME LPAREN param RPAREN LACCOLADE bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (12) statement -> . FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE
    (13) statement -> . NAME LPAREN RPAREN
    (14) statement -> . NAME LPAREN expression RPAREN
    (15) statement -> . SHARP strings

    RACCOLADE       shift and go to state 99
    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10
    SHARP           shift and go to state 11

    statement                      shift and go to state 12

state 95

    (8) statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE . LACCOLADE bloc RACCOLADE

    LACCOLADE       shift and go to state 100


state 96

    (10) statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI . NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE

    NAME            shift and go to state 101


state 97

    (32) param -> NAME . COMA param
    (33) param -> NAME . EQUALS expression COMA param
    (34) param -> NAME . EQUALS expression
    (35) param -> NAME .
    (31) expression -> NAME .

  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 31 (expression -> NAME .)
    COMA            shift and go to state 78
    EQUALS          shift and go to state 79
    PLUS            reduce using rule 31 (expression -> NAME .)
    MINUS           reduce using rule 31 (expression -> NAME .)
    TIMES           reduce using rule 31 (expression -> NAME .)
    DIVIDE          reduce using rule 31 (expression -> NAME .)
    INF             reduce using rule 31 (expression -> NAME .)
    SUP             reduce using rule 31 (expression -> NAME .)
    INFEQUAL        reduce using rule 31 (expression -> NAME .)
    SUPEQUAL        reduce using rule 31 (expression -> NAME .)
    AND             reduce using rule 31 (expression -> NAME .)
    OR              reduce using rule 31 (expression -> NAME .)
    BOOLEQUAL       reduce using rule 31 (expression -> NAME .)
    RPAREN          reduce using rule 31 (expression -> NAME .)

  ! RPAREN          [ reduce using rule 35 (param -> NAME .) ]
  ! COMA            [ reduce using rule 31 (expression -> NAME .) ]


state 98

    (33) param -> NAME EQUALS expression COMA param .

    RPAREN          reduce using rule 33 (param -> NAME EQUALS expression COMA param .)


state 99

    (12) statement -> FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE .

    SEMI            reduce using rule 12 (statement -> FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE .)


state 100

    (8) statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMI
    (3) bloc -> . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (12) statement -> . FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE
    (13) statement -> . NAME LPAREN RPAREN
    (14) statement -> . NAME LPAREN expression RPAREN
    (15) statement -> . SHARP strings

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10
    SHARP           shift and go to state 11

    bloc                           shift and go to state 102
    statement                      shift and go to state 3

state 101

    (10) statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME . EQUALS expression RPAREN LACCOLADE bloc RACCOLADE

    EQUALS          shift and go to state 103


state 102

    (8) statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (12) statement -> . FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE
    (13) statement -> . NAME LPAREN RPAREN
    (14) statement -> . NAME LPAREN expression RPAREN
    (15) statement -> . SHARP strings

    RACCOLADE       shift and go to state 104
    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10
    SHARP           shift and go to state 11

    statement                      shift and go to state 12

state 103

    (10) statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS . expression RPAREN LACCOLADE bloc RACCOLADE
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression INF expression
    (21) expression -> . expression SUP expression
    (22) expression -> . expression INFEQUAL expression
    (23) expression -> . expression SUPEQUAL expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . expression BOOLEQUAL expression
    (27) expression -> . MINUS expression
    (28) expression -> . expression COMA expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 27
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 29
    NAME            shift and go to state 25

    expression                     shift and go to state 105

state 104

    (8) statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE .

    SEMI            reduce using rule 8 (statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE .)


state 105

    (10) statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression . RPAREN LACCOLADE bloc RACCOLADE
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . INF expression
    (21) expression -> expression . SUP expression
    (22) expression -> expression . INFEQUAL expression
    (23) expression -> expression . SUPEQUAL expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (26) expression -> expression . BOOLEQUAL expression
    (28) expression -> expression . COMA expression

    RPAREN          shift and go to state 106
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    INF             shift and go to state 43
    SUP             shift and go to state 44
    INFEQUAL        shift and go to state 45
    SUPEQUAL        shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    BOOLEQUAL       shift and go to state 49
    COMA            shift and go to state 50


state 106

    (10) statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN . LACCOLADE bloc RACCOLADE

    LACCOLADE       shift and go to state 107


state 107

    (10) statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMI
    (3) bloc -> . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (12) statement -> . FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE
    (13) statement -> . NAME LPAREN RPAREN
    (14) statement -> . NAME LPAREN expression RPAREN
    (15) statement -> . SHARP strings

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10
    SHARP           shift and go to state 11

    bloc                           shift and go to state 108
    statement                      shift and go to state 3

state 108

    (10) statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (12) statement -> . FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE
    (13) statement -> . NAME LPAREN RPAREN
    (14) statement -> . NAME LPAREN expression RPAREN
    (15) statement -> . SHARP strings

    RACCOLADE       shift and go to state 109
    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10
    SHARP           shift and go to state 11

    statement                      shift and go to state 12

state 109

    (10) statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE .

    SEMI            reduce using rule 10 (statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 73 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 73 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 73 resolved as shift
WARNING: shift/reduce conflict for INF in state 73 resolved as shift
WARNING: shift/reduce conflict for SUP in state 73 resolved as shift
WARNING: shift/reduce conflict for INFEQUAL in state 73 resolved as shift
WARNING: shift/reduce conflict for SUPEQUAL in state 73 resolved as shift
WARNING: shift/reduce conflict for AND in state 73 resolved as shift
WARNING: shift/reduce conflict for OR in state 73 resolved as shift
WARNING: shift/reduce conflict for BOOLEQUAL in state 73 resolved as shift
WARNING: shift/reduce conflict for COMA in state 73 resolved as shift
WARNING: shift/reduce conflict for COMA in state 97 resolved as shift
WARNING: reduce/reduce conflict in state 97 resolved using rule (expression -> NAME)
WARNING: rejected rule (param -> NAME) in state 97
