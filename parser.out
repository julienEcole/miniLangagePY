Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ELSE
    RETURN

Grammar

Rule 0     S' -> start
Rule 1     start -> bloc
Rule 2     bloc -> bloc statement SEMI
Rule 3     bloc -> statement SEMI
Rule 4     statement -> NAME EQUALS expression
Rule 5     statement -> PRINT LPAREN expression RPAREN
Rule 6     statement -> PRINTSTR LPAREN strings RPAREN
Rule 7     statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
Rule 8     statement -> WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
Rule 9     statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
Rule 10    statement -> FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
Rule 11    statement -> FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE
Rule 12    statement -> NAME LPAREN RPAREN
Rule 13    statement -> NAME LPAREN expression RPAREN
Rule 14    expression -> expression PLUS expression
Rule 15    expression -> expression MINUS expression
Rule 16    expression -> expression TIMES expression
Rule 17    expression -> expression DIVIDE expression
Rule 18    expression -> expression INF expression
Rule 19    expression -> expression SUP expression
Rule 20    expression -> expression AND expression
Rule 21    expression -> expression OR expression
Rule 22    expression -> expression BOOLEQUAL expression
Rule 23    expression -> MINUS expression
Rule 24    expression -> expression COMA expression
Rule 25    expression -> LPAREN expression RPAREN
Rule 26    expression -> NUMBER
Rule 27    expression -> NAME
Rule 28    param -> NAME COMA param
Rule 29    param -> NAME
Rule 30    strings -> NAME strings
Rule 31    strings -> NAME

Terminals, with rules where they appear

AND                  : 20
BOOLEQUAL            : 22
COMA                 : 24 28
DIVIDE               : 17
ELSE                 : 
EQUALS               : 4 9 9
FOR                  : 9
FUNC                 : 10 11
IF                   : 7
INF                  : 18
LACCOLADE            : 7 8 9 10 11
LPAREN               : 5 6 7 8 9 10 11 12 13 25
MINUS                : 15 23
NAME                 : 4 9 9 10 11 12 13 27 28 29 30 31
NUMBER               : 26
OR                   : 21
PLUS                 : 14
PRINT                : 5
PRINTSTR             : 6
RACCOLADE            : 7 8 9 10 11
RETURN               : 
RPAREN               : 5 6 7 8 9 10 11 12 13 25
SEMI                 : 2 3 9 9
SUP                  : 19
TIMES                : 16
WHILE                : 8
error                : 

Nonterminals, with rules where they appear

bloc                 : 1 2 7 8 9 10 11
expression           : 4 5 7 8 9 9 9 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 24 24 25
param                : 11 28
start                : 0
statement            : 2 3
strings              : 6 30

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . bloc
    (2) bloc -> . bloc statement SEMI
    (3) bloc -> . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE
    (12) statement -> . NAME LPAREN RPAREN
    (13) statement -> . NAME LPAREN expression RPAREN

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10

    start                          shift and go to state 1
    bloc                           shift and go to state 2
    statement                      shift and go to state 3

state 1

    (0) S' -> start .



state 2

    (1) start -> bloc .
    (2) bloc -> bloc . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE
    (12) statement -> . NAME LPAREN RPAREN
    (13) statement -> . NAME LPAREN expression RPAREN

    $end            reduce using rule 1 (start -> bloc .)
    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10

    statement                      shift and go to state 11

state 3

    (3) bloc -> statement . SEMI

    SEMI            shift and go to state 12


state 4

    (4) statement -> NAME . EQUALS expression
    (12) statement -> NAME . LPAREN RPAREN
    (13) statement -> NAME . LPAREN expression RPAREN

    EQUALS          shift and go to state 13
    LPAREN          shift and go to state 14


state 5

    (5) statement -> PRINT . LPAREN expression RPAREN

    LPAREN          shift and go to state 15


state 6

    (6) statement -> PRINTSTR . LPAREN strings RPAREN

    LPAREN          shift and go to state 16


state 7

    (7) statement -> IF . LPAREN expression RPAREN LACCOLADE bloc RACCOLADE

    LPAREN          shift and go to state 17


state 8

    (8) statement -> WHILE . LPAREN expression RPAREN LACCOLADE bloc RACCOLADE

    LPAREN          shift and go to state 18


state 9

    (9) statement -> FOR . LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE

    LPAREN          shift and go to state 19


state 10

    (10) statement -> FUNC . NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> FUNC . NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE

    NAME            shift and go to state 20


state 11

    (2) bloc -> bloc statement . SEMI

    SEMI            shift and go to state 21


state 12

    (3) bloc -> statement SEMI .

    NAME            reduce using rule 3 (bloc -> statement SEMI .)
    PRINT           reduce using rule 3 (bloc -> statement SEMI .)
    PRINTSTR        reduce using rule 3 (bloc -> statement SEMI .)
    IF              reduce using rule 3 (bloc -> statement SEMI .)
    WHILE           reduce using rule 3 (bloc -> statement SEMI .)
    FOR             reduce using rule 3 (bloc -> statement SEMI .)
    FUNC            reduce using rule 3 (bloc -> statement SEMI .)
    $end            reduce using rule 3 (bloc -> statement SEMI .)
    RACCOLADE       reduce using rule 3 (bloc -> statement SEMI .)


state 13

    (4) statement -> NAME EQUALS . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression INF expression
    (19) expression -> . expression SUP expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression BOOLEQUAL expression
    (23) expression -> . MINUS expression
    (24) expression -> . expression COMA expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 23

state 14

    (12) statement -> NAME LPAREN . RPAREN
    (13) statement -> NAME LPAREN . expression RPAREN
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression INF expression
    (19) expression -> . expression SUP expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression BOOLEQUAL expression
    (23) expression -> . MINUS expression
    (24) expression -> . expression COMA expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . NAME

    RPAREN          shift and go to state 27
    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 28

state 15

    (5) statement -> PRINT LPAREN . expression RPAREN
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression INF expression
    (19) expression -> . expression SUP expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression BOOLEQUAL expression
    (23) expression -> . MINUS expression
    (24) expression -> . expression COMA expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 29

state 16

    (6) statement -> PRINTSTR LPAREN . strings RPAREN
    (30) strings -> . NAME strings
    (31) strings -> . NAME

    NAME            shift and go to state 31

    strings                        shift and go to state 30

state 17

    (7) statement -> IF LPAREN . expression RPAREN LACCOLADE bloc RACCOLADE
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression INF expression
    (19) expression -> . expression SUP expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression BOOLEQUAL expression
    (23) expression -> . MINUS expression
    (24) expression -> . expression COMA expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 32

state 18

    (8) statement -> WHILE LPAREN . expression RPAREN LACCOLADE bloc RACCOLADE
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression INF expression
    (19) expression -> . expression SUP expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression BOOLEQUAL expression
    (23) expression -> . MINUS expression
    (24) expression -> . expression COMA expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 33

state 19

    (9) statement -> FOR LPAREN . NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE

    NAME            shift and go to state 34


state 20

    (10) statement -> FUNC NAME . LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> FUNC NAME . LPAREN param RPAREN LACCOLADE bloc RACCOLADE

    LPAREN          shift and go to state 35


state 21

    (2) bloc -> bloc statement SEMI .

    NAME            reduce using rule 2 (bloc -> bloc statement SEMI .)
    PRINT           reduce using rule 2 (bloc -> bloc statement SEMI .)
    PRINTSTR        reduce using rule 2 (bloc -> bloc statement SEMI .)
    IF              reduce using rule 2 (bloc -> bloc statement SEMI .)
    WHILE           reduce using rule 2 (bloc -> bloc statement SEMI .)
    FOR             reduce using rule 2 (bloc -> bloc statement SEMI .)
    FUNC            reduce using rule 2 (bloc -> bloc statement SEMI .)
    $end            reduce using rule 2 (bloc -> bloc statement SEMI .)
    RACCOLADE       reduce using rule 2 (bloc -> bloc statement SEMI .)


state 22

    (27) expression -> NAME .

    PLUS            reduce using rule 27 (expression -> NAME .)
    MINUS           reduce using rule 27 (expression -> NAME .)
    TIMES           reduce using rule 27 (expression -> NAME .)
    DIVIDE          reduce using rule 27 (expression -> NAME .)
    INF             reduce using rule 27 (expression -> NAME .)
    SUP             reduce using rule 27 (expression -> NAME .)
    AND             reduce using rule 27 (expression -> NAME .)
    OR              reduce using rule 27 (expression -> NAME .)
    BOOLEQUAL       reduce using rule 27 (expression -> NAME .)
    COMA            reduce using rule 27 (expression -> NAME .)
    SEMI            reduce using rule 27 (expression -> NAME .)
    RPAREN          reduce using rule 27 (expression -> NAME .)


state 23

    (4) statement -> NAME EQUALS expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . INF expression
    (19) expression -> expression . SUP expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . BOOLEQUAL expression
    (24) expression -> expression . COMA expression

    SEMI            reduce using rule 4 (statement -> NAME EQUALS expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    INF             shift and go to state 40
    SUP             shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    BOOLEQUAL       shift and go to state 44
    COMA            shift and go to state 45


state 24

    (23) expression -> MINUS . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression INF expression
    (19) expression -> . expression SUP expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression BOOLEQUAL expression
    (23) expression -> . MINUS expression
    (24) expression -> . expression COMA expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 46

state 25

    (25) expression -> LPAREN . expression RPAREN
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression INF expression
    (19) expression -> . expression SUP expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression BOOLEQUAL expression
    (23) expression -> . MINUS expression
    (24) expression -> . expression COMA expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 47

state 26

    (26) expression -> NUMBER .

    PLUS            reduce using rule 26 (expression -> NUMBER .)
    MINUS           reduce using rule 26 (expression -> NUMBER .)
    TIMES           reduce using rule 26 (expression -> NUMBER .)
    DIVIDE          reduce using rule 26 (expression -> NUMBER .)
    INF             reduce using rule 26 (expression -> NUMBER .)
    SUP             reduce using rule 26 (expression -> NUMBER .)
    AND             reduce using rule 26 (expression -> NUMBER .)
    OR              reduce using rule 26 (expression -> NUMBER .)
    BOOLEQUAL       reduce using rule 26 (expression -> NUMBER .)
    COMA            reduce using rule 26 (expression -> NUMBER .)
    SEMI            reduce using rule 26 (expression -> NUMBER .)
    RPAREN          reduce using rule 26 (expression -> NUMBER .)


state 27

    (12) statement -> NAME LPAREN RPAREN .

    SEMI            reduce using rule 12 (statement -> NAME LPAREN RPAREN .)


state 28

    (13) statement -> NAME LPAREN expression . RPAREN
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . INF expression
    (19) expression -> expression . SUP expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . BOOLEQUAL expression
    (24) expression -> expression . COMA expression

    RPAREN          shift and go to state 48
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    INF             shift and go to state 40
    SUP             shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    BOOLEQUAL       shift and go to state 44
    COMA            shift and go to state 45


state 29

    (5) statement -> PRINT LPAREN expression . RPAREN
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . INF expression
    (19) expression -> expression . SUP expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . BOOLEQUAL expression
    (24) expression -> expression . COMA expression

    RPAREN          shift and go to state 49
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    INF             shift and go to state 40
    SUP             shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    BOOLEQUAL       shift and go to state 44
    COMA            shift and go to state 45


state 30

    (6) statement -> PRINTSTR LPAREN strings . RPAREN

    RPAREN          shift and go to state 50


state 31

    (30) strings -> NAME . strings
    (31) strings -> NAME .
    (30) strings -> . NAME strings
    (31) strings -> . NAME

    RPAREN          reduce using rule 31 (strings -> NAME .)
    NAME            shift and go to state 31

    strings                        shift and go to state 51

state 32

    (7) statement -> IF LPAREN expression . RPAREN LACCOLADE bloc RACCOLADE
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . INF expression
    (19) expression -> expression . SUP expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . BOOLEQUAL expression
    (24) expression -> expression . COMA expression

    RPAREN          shift and go to state 52
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    INF             shift and go to state 40
    SUP             shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    BOOLEQUAL       shift and go to state 44
    COMA            shift and go to state 45


state 33

    (8) statement -> WHILE LPAREN expression . RPAREN LACCOLADE bloc RACCOLADE
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . INF expression
    (19) expression -> expression . SUP expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . BOOLEQUAL expression
    (24) expression -> expression . COMA expression

    RPAREN          shift and go to state 53
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    INF             shift and go to state 40
    SUP             shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    BOOLEQUAL       shift and go to state 44
    COMA            shift and go to state 45


state 34

    (9) statement -> FOR LPAREN NAME . EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE

    EQUALS          shift and go to state 54


state 35

    (10) statement -> FUNC NAME LPAREN . RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> FUNC NAME LPAREN . param RPAREN LACCOLADE bloc RACCOLADE
    (28) param -> . NAME COMA param
    (29) param -> . NAME

    RPAREN          shift and go to state 56
    NAME            shift and go to state 55

    param                          shift and go to state 57

state 36

    (14) expression -> expression PLUS . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression INF expression
    (19) expression -> . expression SUP expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression BOOLEQUAL expression
    (23) expression -> . MINUS expression
    (24) expression -> . expression COMA expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 58

state 37

    (15) expression -> expression MINUS . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression INF expression
    (19) expression -> . expression SUP expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression BOOLEQUAL expression
    (23) expression -> . MINUS expression
    (24) expression -> . expression COMA expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 59

state 38

    (16) expression -> expression TIMES . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression INF expression
    (19) expression -> . expression SUP expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression BOOLEQUAL expression
    (23) expression -> . MINUS expression
    (24) expression -> . expression COMA expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 60

state 39

    (17) expression -> expression DIVIDE . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression INF expression
    (19) expression -> . expression SUP expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression BOOLEQUAL expression
    (23) expression -> . MINUS expression
    (24) expression -> . expression COMA expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 61

state 40

    (18) expression -> expression INF . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression INF expression
    (19) expression -> . expression SUP expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression BOOLEQUAL expression
    (23) expression -> . MINUS expression
    (24) expression -> . expression COMA expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 62

state 41

    (19) expression -> expression SUP . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression INF expression
    (19) expression -> . expression SUP expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression BOOLEQUAL expression
    (23) expression -> . MINUS expression
    (24) expression -> . expression COMA expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 63

state 42

    (20) expression -> expression AND . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression INF expression
    (19) expression -> . expression SUP expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression BOOLEQUAL expression
    (23) expression -> . MINUS expression
    (24) expression -> . expression COMA expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 64

state 43

    (21) expression -> expression OR . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression INF expression
    (19) expression -> . expression SUP expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression BOOLEQUAL expression
    (23) expression -> . MINUS expression
    (24) expression -> . expression COMA expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 65

state 44

    (22) expression -> expression BOOLEQUAL . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression INF expression
    (19) expression -> . expression SUP expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression BOOLEQUAL expression
    (23) expression -> . MINUS expression
    (24) expression -> . expression COMA expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 66

state 45

    (24) expression -> expression COMA . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression INF expression
    (19) expression -> . expression SUP expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression BOOLEQUAL expression
    (23) expression -> . MINUS expression
    (24) expression -> . expression COMA expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 67

state 46

    (23) expression -> MINUS expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . INF expression
    (19) expression -> expression . SUP expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . BOOLEQUAL expression
    (24) expression -> expression . COMA expression

    PLUS            reduce using rule 23 (expression -> MINUS expression .)
    MINUS           reduce using rule 23 (expression -> MINUS expression .)
    INF             reduce using rule 23 (expression -> MINUS expression .)
    SUP             reduce using rule 23 (expression -> MINUS expression .)
    AND             reduce using rule 23 (expression -> MINUS expression .)
    OR              reduce using rule 23 (expression -> MINUS expression .)
    BOOLEQUAL       reduce using rule 23 (expression -> MINUS expression .)
    COMA            reduce using rule 23 (expression -> MINUS expression .)
    SEMI            reduce using rule 23 (expression -> MINUS expression .)
    RPAREN          reduce using rule 23 (expression -> MINUS expression .)
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39

  ! TIMES           [ reduce using rule 23 (expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! INF             [ shift and go to state 40 ]
  ! SUP             [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! BOOLEQUAL       [ shift and go to state 44 ]
  ! COMA            [ shift and go to state 45 ]


state 47

    (25) expression -> LPAREN expression . RPAREN
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . INF expression
    (19) expression -> expression . SUP expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . BOOLEQUAL expression
    (24) expression -> expression . COMA expression

    RPAREN          shift and go to state 68
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    INF             shift and go to state 40
    SUP             shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    BOOLEQUAL       shift and go to state 44
    COMA            shift and go to state 45


state 48

    (13) statement -> NAME LPAREN expression RPAREN .

    SEMI            reduce using rule 13 (statement -> NAME LPAREN expression RPAREN .)


state 49

    (5) statement -> PRINT LPAREN expression RPAREN .

    SEMI            reduce using rule 5 (statement -> PRINT LPAREN expression RPAREN .)


state 50

    (6) statement -> PRINTSTR LPAREN strings RPAREN .

    SEMI            reduce using rule 6 (statement -> PRINTSTR LPAREN strings RPAREN .)


state 51

    (30) strings -> NAME strings .

    RPAREN          reduce using rule 30 (strings -> NAME strings .)


state 52

    (7) statement -> IF LPAREN expression RPAREN . LACCOLADE bloc RACCOLADE

    LACCOLADE       shift and go to state 69


state 53

    (8) statement -> WHILE LPAREN expression RPAREN . LACCOLADE bloc RACCOLADE

    LACCOLADE       shift and go to state 70


state 54

    (9) statement -> FOR LPAREN NAME EQUALS . expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression INF expression
    (19) expression -> . expression SUP expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression BOOLEQUAL expression
    (23) expression -> . MINUS expression
    (24) expression -> . expression COMA expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 71

state 55

    (28) param -> NAME . COMA param
    (29) param -> NAME .

    COMA            shift and go to state 72
    RPAREN          reduce using rule 29 (param -> NAME .)


state 56

    (10) statement -> FUNC NAME LPAREN RPAREN . LACCOLADE bloc RACCOLADE

    LACCOLADE       shift and go to state 73


state 57

    (11) statement -> FUNC NAME LPAREN param . RPAREN LACCOLADE bloc RACCOLADE

    RPAREN          shift and go to state 74


state 58

    (14) expression -> expression PLUS expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . INF expression
    (19) expression -> expression . SUP expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . BOOLEQUAL expression
    (24) expression -> expression . COMA expression

    PLUS            reduce using rule 14 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 14 (expression -> expression PLUS expression .)
    INF             reduce using rule 14 (expression -> expression PLUS expression .)
    SUP             reduce using rule 14 (expression -> expression PLUS expression .)
    AND             reduce using rule 14 (expression -> expression PLUS expression .)
    OR              reduce using rule 14 (expression -> expression PLUS expression .)
    BOOLEQUAL       reduce using rule 14 (expression -> expression PLUS expression .)
    COMA            reduce using rule 14 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 14 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 14 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39

  ! TIMES           [ reduce using rule 14 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! INF             [ shift and go to state 40 ]
  ! SUP             [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! BOOLEQUAL       [ shift and go to state 44 ]
  ! COMA            [ shift and go to state 45 ]


state 59

    (15) expression -> expression MINUS expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . INF expression
    (19) expression -> expression . SUP expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . BOOLEQUAL expression
    (24) expression -> expression . COMA expression

    PLUS            reduce using rule 15 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 15 (expression -> expression MINUS expression .)
    INF             reduce using rule 15 (expression -> expression MINUS expression .)
    SUP             reduce using rule 15 (expression -> expression MINUS expression .)
    AND             reduce using rule 15 (expression -> expression MINUS expression .)
    OR              reduce using rule 15 (expression -> expression MINUS expression .)
    BOOLEQUAL       reduce using rule 15 (expression -> expression MINUS expression .)
    COMA            reduce using rule 15 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 15 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 15 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39

  ! TIMES           [ reduce using rule 15 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! INF             [ shift and go to state 40 ]
  ! SUP             [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! BOOLEQUAL       [ shift and go to state 44 ]
  ! COMA            [ shift and go to state 45 ]


state 60

    (16) expression -> expression TIMES expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . INF expression
    (19) expression -> expression . SUP expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . BOOLEQUAL expression
    (24) expression -> expression . COMA expression

    PLUS            reduce using rule 16 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 16 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 16 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 16 (expression -> expression TIMES expression .)
    INF             reduce using rule 16 (expression -> expression TIMES expression .)
    SUP             reduce using rule 16 (expression -> expression TIMES expression .)
    AND             reduce using rule 16 (expression -> expression TIMES expression .)
    OR              reduce using rule 16 (expression -> expression TIMES expression .)
    BOOLEQUAL       reduce using rule 16 (expression -> expression TIMES expression .)
    COMA            reduce using rule 16 (expression -> expression TIMES expression .)
    SEMI            reduce using rule 16 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 16 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! TIMES           [ shift and go to state 38 ]
  ! DIVIDE          [ shift and go to state 39 ]
  ! INF             [ shift and go to state 40 ]
  ! SUP             [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! BOOLEQUAL       [ shift and go to state 44 ]
  ! COMA            [ shift and go to state 45 ]


state 61

    (17) expression -> expression DIVIDE expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . INF expression
    (19) expression -> expression . SUP expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . BOOLEQUAL expression
    (24) expression -> expression . COMA expression

    PLUS            reduce using rule 17 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 17 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 17 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 17 (expression -> expression DIVIDE expression .)
    INF             reduce using rule 17 (expression -> expression DIVIDE expression .)
    SUP             reduce using rule 17 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 17 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 17 (expression -> expression DIVIDE expression .)
    BOOLEQUAL       reduce using rule 17 (expression -> expression DIVIDE expression .)
    COMA            reduce using rule 17 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 17 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 17 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! TIMES           [ shift and go to state 38 ]
  ! DIVIDE          [ shift and go to state 39 ]
  ! INF             [ shift and go to state 40 ]
  ! SUP             [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! BOOLEQUAL       [ shift and go to state 44 ]
  ! COMA            [ shift and go to state 45 ]


state 62

    (18) expression -> expression INF expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . INF expression
    (19) expression -> expression . SUP expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . BOOLEQUAL expression
    (24) expression -> expression . COMA expression

    INF             reduce using rule 18 (expression -> expression INF expression .)
    SUP             reduce using rule 18 (expression -> expression INF expression .)
    AND             reduce using rule 18 (expression -> expression INF expression .)
    OR              reduce using rule 18 (expression -> expression INF expression .)
    BOOLEQUAL       reduce using rule 18 (expression -> expression INF expression .)
    COMA            reduce using rule 18 (expression -> expression INF expression .)
    SEMI            reduce using rule 18 (expression -> expression INF expression .)
    RPAREN          reduce using rule 18 (expression -> expression INF expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39

  ! PLUS            [ reduce using rule 18 (expression -> expression INF expression .) ]
  ! MINUS           [ reduce using rule 18 (expression -> expression INF expression .) ]
  ! TIMES           [ reduce using rule 18 (expression -> expression INF expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression INF expression .) ]
  ! INF             [ shift and go to state 40 ]
  ! SUP             [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! BOOLEQUAL       [ shift and go to state 44 ]
  ! COMA            [ shift and go to state 45 ]


state 63

    (19) expression -> expression SUP expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . INF expression
    (19) expression -> expression . SUP expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . BOOLEQUAL expression
    (24) expression -> expression . COMA expression

    INF             reduce using rule 19 (expression -> expression SUP expression .)
    SUP             reduce using rule 19 (expression -> expression SUP expression .)
    AND             reduce using rule 19 (expression -> expression SUP expression .)
    OR              reduce using rule 19 (expression -> expression SUP expression .)
    BOOLEQUAL       reduce using rule 19 (expression -> expression SUP expression .)
    COMA            reduce using rule 19 (expression -> expression SUP expression .)
    SEMI            reduce using rule 19 (expression -> expression SUP expression .)
    RPAREN          reduce using rule 19 (expression -> expression SUP expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39

  ! PLUS            [ reduce using rule 19 (expression -> expression SUP expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> expression SUP expression .) ]
  ! TIMES           [ reduce using rule 19 (expression -> expression SUP expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression SUP expression .) ]
  ! INF             [ shift and go to state 40 ]
  ! SUP             [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! BOOLEQUAL       [ shift and go to state 44 ]
  ! COMA            [ shift and go to state 45 ]


state 64

    (20) expression -> expression AND expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . INF expression
    (19) expression -> expression . SUP expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . BOOLEQUAL expression
    (24) expression -> expression . COMA expression

    AND             reduce using rule 20 (expression -> expression AND expression .)
    OR              reduce using rule 20 (expression -> expression AND expression .)
    COMA            reduce using rule 20 (expression -> expression AND expression .)
    SEMI            reduce using rule 20 (expression -> expression AND expression .)
    RPAREN          reduce using rule 20 (expression -> expression AND expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    INF             shift and go to state 40
    SUP             shift and go to state 41
    BOOLEQUAL       shift and go to state 44

  ! PLUS            [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! INF             [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! SUP             [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! BOOLEQUAL       [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! COMA            [ shift and go to state 45 ]


state 65

    (21) expression -> expression OR expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . INF expression
    (19) expression -> expression . SUP expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . BOOLEQUAL expression
    (24) expression -> expression . COMA expression

    OR              reduce using rule 21 (expression -> expression OR expression .)
    COMA            reduce using rule 21 (expression -> expression OR expression .)
    SEMI            reduce using rule 21 (expression -> expression OR expression .)
    RPAREN          reduce using rule 21 (expression -> expression OR expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    INF             shift and go to state 40
    SUP             shift and go to state 41
    AND             shift and go to state 42
    BOOLEQUAL       shift and go to state 44

  ! PLUS            [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! INF             [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! SUP             [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! BOOLEQUAL       [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 43 ]
  ! COMA            [ shift and go to state 45 ]


state 66

    (22) expression -> expression BOOLEQUAL expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . INF expression
    (19) expression -> expression . SUP expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . BOOLEQUAL expression
    (24) expression -> expression . COMA expression

    INF             reduce using rule 22 (expression -> expression BOOLEQUAL expression .)
    SUP             reduce using rule 22 (expression -> expression BOOLEQUAL expression .)
    AND             reduce using rule 22 (expression -> expression BOOLEQUAL expression .)
    OR              reduce using rule 22 (expression -> expression BOOLEQUAL expression .)
    BOOLEQUAL       reduce using rule 22 (expression -> expression BOOLEQUAL expression .)
    COMA            reduce using rule 22 (expression -> expression BOOLEQUAL expression .)
    SEMI            reduce using rule 22 (expression -> expression BOOLEQUAL expression .)
    RPAREN          reduce using rule 22 (expression -> expression BOOLEQUAL expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39

  ! PLUS            [ reduce using rule 22 (expression -> expression BOOLEQUAL expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> expression BOOLEQUAL expression .) ]
  ! TIMES           [ reduce using rule 22 (expression -> expression BOOLEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression BOOLEQUAL expression .) ]
  ! INF             [ shift and go to state 40 ]
  ! SUP             [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! BOOLEQUAL       [ shift and go to state 44 ]
  ! COMA            [ shift and go to state 45 ]


state 67

    (24) expression -> expression COMA expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . INF expression
    (19) expression -> expression . SUP expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . BOOLEQUAL expression
    (24) expression -> expression . COMA expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for INF resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for BOOLEQUAL resolved as shift
  ! shift/reduce conflict for COMA resolved as shift
    SEMI            reduce using rule 24 (expression -> expression COMA expression .)
    RPAREN          reduce using rule 24 (expression -> expression COMA expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    INF             shift and go to state 40
    SUP             shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    BOOLEQUAL       shift and go to state 44
    COMA            shift and go to state 45

  ! PLUS            [ reduce using rule 24 (expression -> expression COMA expression .) ]
  ! MINUS           [ reduce using rule 24 (expression -> expression COMA expression .) ]
  ! TIMES           [ reduce using rule 24 (expression -> expression COMA expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression COMA expression .) ]
  ! INF             [ reduce using rule 24 (expression -> expression COMA expression .) ]
  ! SUP             [ reduce using rule 24 (expression -> expression COMA expression .) ]
  ! AND             [ reduce using rule 24 (expression -> expression COMA expression .) ]
  ! OR              [ reduce using rule 24 (expression -> expression COMA expression .) ]
  ! BOOLEQUAL       [ reduce using rule 24 (expression -> expression COMA expression .) ]
  ! COMA            [ reduce using rule 24 (expression -> expression COMA expression .) ]


state 68

    (25) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    INF             reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    SUP             reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    BOOLEQUAL       reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    COMA            reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 25 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 25 (expression -> LPAREN expression RPAREN .)


state 69

    (7) statement -> IF LPAREN expression RPAREN LACCOLADE . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMI
    (3) bloc -> . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE
    (12) statement -> . NAME LPAREN RPAREN
    (13) statement -> . NAME LPAREN expression RPAREN

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10

    bloc                           shift and go to state 75
    statement                      shift and go to state 3

state 70

    (8) statement -> WHILE LPAREN expression RPAREN LACCOLADE . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMI
    (3) bloc -> . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE
    (12) statement -> . NAME LPAREN RPAREN
    (13) statement -> . NAME LPAREN expression RPAREN

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10

    bloc                           shift and go to state 76
    statement                      shift and go to state 3

state 71

    (9) statement -> FOR LPAREN NAME EQUALS expression . SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . INF expression
    (19) expression -> expression . SUP expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . BOOLEQUAL expression
    (24) expression -> expression . COMA expression

    SEMI            shift and go to state 77
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    INF             shift and go to state 40
    SUP             shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    BOOLEQUAL       shift and go to state 44
    COMA            shift and go to state 45


state 72

    (28) param -> NAME COMA . param
    (28) param -> . NAME COMA param
    (29) param -> . NAME

    NAME            shift and go to state 55

    param                          shift and go to state 78

state 73

    (10) statement -> FUNC NAME LPAREN RPAREN LACCOLADE . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMI
    (3) bloc -> . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE
    (12) statement -> . NAME LPAREN RPAREN
    (13) statement -> . NAME LPAREN expression RPAREN

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10

    bloc                           shift and go to state 79
    statement                      shift and go to state 3

state 74

    (11) statement -> FUNC NAME LPAREN param RPAREN . LACCOLADE bloc RACCOLADE

    LACCOLADE       shift and go to state 80


state 75

    (7) statement -> IF LPAREN expression RPAREN LACCOLADE bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE
    (12) statement -> . NAME LPAREN RPAREN
    (13) statement -> . NAME LPAREN expression RPAREN

    RACCOLADE       shift and go to state 81
    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10

    statement                      shift and go to state 11

state 76

    (8) statement -> WHILE LPAREN expression RPAREN LACCOLADE bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE
    (12) statement -> . NAME LPAREN RPAREN
    (13) statement -> . NAME LPAREN expression RPAREN

    RACCOLADE       shift and go to state 82
    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10

    statement                      shift and go to state 11

state 77

    (9) statement -> FOR LPAREN NAME EQUALS expression SEMI . expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression INF expression
    (19) expression -> . expression SUP expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression BOOLEQUAL expression
    (23) expression -> . MINUS expression
    (24) expression -> . expression COMA expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 83

state 78

    (28) param -> NAME COMA param .

    RPAREN          reduce using rule 28 (param -> NAME COMA param .)


state 79

    (10) statement -> FUNC NAME LPAREN RPAREN LACCOLADE bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE
    (12) statement -> . NAME LPAREN RPAREN
    (13) statement -> . NAME LPAREN expression RPAREN

    RACCOLADE       shift and go to state 84
    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10

    statement                      shift and go to state 11

state 80

    (11) statement -> FUNC NAME LPAREN param RPAREN LACCOLADE . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMI
    (3) bloc -> . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE
    (12) statement -> . NAME LPAREN RPAREN
    (13) statement -> . NAME LPAREN expression RPAREN

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10

    bloc                           shift and go to state 85
    statement                      shift and go to state 3

state 81

    (7) statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE .

    SEMI            reduce using rule 7 (statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE .)


state 82

    (8) statement -> WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE .

    SEMI            reduce using rule 8 (statement -> WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE .)


state 83

    (9) statement -> FOR LPAREN NAME EQUALS expression SEMI expression . SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . INF expression
    (19) expression -> expression . SUP expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . BOOLEQUAL expression
    (24) expression -> expression . COMA expression

    SEMI            shift and go to state 86
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    INF             shift and go to state 40
    SUP             shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    BOOLEQUAL       shift and go to state 44
    COMA            shift and go to state 45


state 84

    (10) statement -> FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE .

    SEMI            reduce using rule 10 (statement -> FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE .)


state 85

    (11) statement -> FUNC NAME LPAREN param RPAREN LACCOLADE bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE
    (12) statement -> . NAME LPAREN RPAREN
    (13) statement -> . NAME LPAREN expression RPAREN

    RACCOLADE       shift and go to state 87
    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10

    statement                      shift and go to state 11

state 86

    (9) statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI . NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE

    NAME            shift and go to state 88


state 87

    (11) statement -> FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE .

    SEMI            reduce using rule 11 (statement -> FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE .)


state 88

    (9) statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME . EQUALS expression RPAREN LACCOLADE bloc RACCOLADE

    EQUALS          shift and go to state 89


state 89

    (9) statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS . expression RPAREN LACCOLADE bloc RACCOLADE
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression INF expression
    (19) expression -> . expression SUP expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . expression BOOLEQUAL expression
    (23) expression -> . MINUS expression
    (24) expression -> . expression COMA expression
    (25) expression -> . LPAREN expression RPAREN
    (26) expression -> . NUMBER
    (27) expression -> . NAME

    MINUS           shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    NAME            shift and go to state 22

    expression                     shift and go to state 90

state 90

    (9) statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression . RPAREN LACCOLADE bloc RACCOLADE
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . INF expression
    (19) expression -> expression . SUP expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (22) expression -> expression . BOOLEQUAL expression
    (24) expression -> expression . COMA expression

    RPAREN          shift and go to state 91
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    INF             shift and go to state 40
    SUP             shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    BOOLEQUAL       shift and go to state 44
    COMA            shift and go to state 45


state 91

    (9) statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN . LACCOLADE bloc RACCOLADE

    LACCOLADE       shift and go to state 92


state 92

    (9) statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMI
    (3) bloc -> . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE
    (12) statement -> . NAME LPAREN RPAREN
    (13) statement -> . NAME LPAREN expression RPAREN

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10

    bloc                           shift and go to state 93
    statement                      shift and go to state 3

state 93

    (9) statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMI
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . PRINT LPAREN expression RPAREN
    (6) statement -> . PRINTSTR LPAREN strings RPAREN
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (11) statement -> . FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE
    (12) statement -> . NAME LPAREN RPAREN
    (13) statement -> . NAME LPAREN expression RPAREN

    RACCOLADE       shift and go to state 94
    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    PRINTSTR        shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNC            shift and go to state 10

    statement                      shift and go to state 11

state 94

    (9) statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE .

    SEMI            reduce using rule 9 (statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 67 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 67 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 67 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 67 resolved as shift
WARNING: shift/reduce conflict for INF in state 67 resolved as shift
WARNING: shift/reduce conflict for SUP in state 67 resolved as shift
WARNING: shift/reduce conflict for AND in state 67 resolved as shift
WARNING: shift/reduce conflict for OR in state 67 resolved as shift
WARNING: shift/reduce conflict for BOOLEQUAL in state 67 resolved as shift
WARNING: shift/reduce conflict for COMA in state 67 resolved as shift
