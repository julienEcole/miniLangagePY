
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDnonassocINFSUPBOOLEQUALleftPLUSMINUSleftTIMESDIVIDEAND BOOLEQUAL DIVIDE ELSE EQUALS FOR FUNC IF INF LACCOLADE LPAREN MINUS NAME NUMBER OR PLUS PRINT PRINTSTR RACCOLADE RETURN RPAREN SEMI SUP TIMES WHILEstart : bloc bloc : bloc statement SEMI\n            | statement SEMIstatement : NAME EQUALS expressionstatement : PRINT LPAREN expression RPARENstatement : PRINTSTR LPAREN strings RPARENstatement : IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADEstatement : WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADEstatement : FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADEstatement : FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADEexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression INF expression \n                  | expression SUP expression \n                  | expression AND expression \n                  | expression OR expression\n                  | expression BOOLEQUAL expression expression : MINUS expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : NAMEstrings : NAME strings\n               | NAME'
    
_lr_action_items = {'NAME':([0,2,10,12,13,14,15,16,17,18,20,23,24,28,33,34,35,36,37,38,39,40,41,49,61,62,64,65,66,67,68,73,75,78,79,],[4,4,19,-3,21,21,28,21,21,31,-2,21,21,28,21,21,21,21,21,21,21,21,21,21,4,4,4,4,4,21,4,74,21,4,4,]),'PRINT':([0,2,12,20,61,62,64,65,66,68,78,79,],[5,5,-3,-2,5,5,5,5,5,5,5,5,]),'PRINTSTR':([0,2,12,20,61,62,64,65,66,68,78,79,],[6,6,-3,-2,6,6,6,6,6,6,6,6,]),'IF':([0,2,12,20,61,62,64,65,66,68,78,79,],[7,7,-3,-2,7,7,7,7,7,7,7,7,]),'WHILE':([0,2,12,20,61,62,64,65,66,68,78,79,],[8,8,-3,-2,8,8,8,8,8,8,8,8,]),'FOR':([0,2,12,20,61,62,64,65,66,68,78,79,],[9,9,-3,-2,9,9,9,9,9,9,9,9,]),'FUNC':([0,2,12,20,61,62,64,65,66,68,78,79,],[10,10,-3,-2,10,10,10,10,10,10,10,10,]),'$end':([1,2,12,20,],[0,-1,-3,-2,]),'SEMI':([3,11,21,22,25,42,44,45,51,52,53,54,55,56,57,58,59,60,63,69,70,71,72,80,],[12,20,-23,-4,-22,-20,-5,-6,-11,-12,-13,-14,-15,-16,-17,-18,-19,-21,67,-7,-8,73,-10,-9,]),'EQUALS':([4,31,74,],[13,49,75,]),'LPAREN':([5,6,7,8,9,13,14,16,17,19,23,24,33,34,35,36,37,38,39,40,41,49,67,75,],[14,15,16,17,18,24,24,24,24,32,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'RACCOLADE':([12,20,65,66,68,79,],[-3,-2,69,70,72,80,]),'MINUS':([13,14,16,17,21,22,23,24,25,26,29,30,33,34,35,36,37,38,39,40,41,42,43,49,51,52,53,54,55,56,57,58,59,60,63,67,71,75,76,],[23,23,23,23,-23,34,23,23,-22,34,34,34,23,23,23,23,23,23,23,23,23,-20,34,23,-11,-12,-13,-14,34,34,34,34,34,-21,34,23,34,23,34,]),'NUMBER':([13,14,16,17,23,24,33,34,35,36,37,38,39,40,41,49,67,75,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'PLUS':([21,22,25,26,29,30,42,43,51,52,53,54,55,56,57,58,59,60,63,71,76,],[-23,33,-22,33,33,33,-20,33,-11,-12,-13,-14,33,33,33,33,33,-21,33,33,33,]),'TIMES':([21,22,25,26,29,30,42,43,51,52,53,54,55,56,57,58,59,60,63,71,76,],[-23,35,-22,35,35,35,35,35,35,35,-13,-14,35,35,35,35,35,-21,35,35,35,]),'DIVIDE':([21,22,25,26,29,30,42,43,51,52,53,54,55,56,57,58,59,60,63,71,76,],[-23,36,-22,36,36,36,36,36,36,36,-13,-14,36,36,36,36,36,-21,36,36,36,]),'INF':([21,22,25,26,29,30,42,43,51,52,53,54,55,56,57,58,59,60,63,71,76,],[-23,37,-22,37,37,37,-20,37,-11,-12,-13,-14,None,None,37,37,None,-21,37,37,37,]),'SUP':([21,22,25,26,29,30,42,43,51,52,53,54,55,56,57,58,59,60,63,71,76,],[-23,38,-22,38,38,38,-20,38,-11,-12,-13,-14,None,None,38,38,None,-21,38,38,38,]),'AND':([21,22,25,26,29,30,42,43,51,52,53,54,55,56,57,58,59,60,63,71,76,],[-23,39,-22,39,39,39,-20,39,-11,-12,-13,-14,-15,-16,-17,39,-19,-21,39,39,39,]),'OR':([21,22,25,26,29,30,42,43,51,52,53,54,55,56,57,58,59,60,63,71,76,],[-23,40,-22,40,40,40,-20,40,-11,-12,-13,-14,-15,-16,-17,-18,-19,-21,40,40,40,]),'BOOLEQUAL':([21,22,25,26,29,30,42,43,51,52,53,54,55,56,57,58,59,60,63,71,76,],[-23,41,-22,41,41,41,-20,41,-11,-12,-13,-14,None,None,41,41,None,-21,41,41,41,]),'RPAREN':([21,25,26,27,28,29,30,32,42,43,46,51,52,53,54,55,56,57,58,59,60,76,],[-23,-22,44,45,-25,47,48,50,-20,60,-24,-11,-12,-13,-14,-15,-16,-17,-18,-19,-21,77,]),'LACCOLADE':([47,48,50,77,],[61,62,64,78,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'bloc':([0,61,62,64,78,],[2,65,66,68,79,]),'statement':([0,2,61,62,64,65,66,68,78,79,],[3,11,3,3,3,11,11,11,3,11,]),'expression':([13,14,16,17,23,24,33,34,35,36,37,38,39,40,41,49,67,75,],[22,26,29,30,42,43,51,52,53,54,55,56,57,58,59,63,71,76,]),'strings':([15,28,],[27,46,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> bloc','start',1,'p_start','tmp.py',165),
  ('bloc -> bloc statement SEMI','bloc',3,'p_bloc','tmp.py',174),
  ('bloc -> statement SEMI','bloc',2,'p_bloc','tmp.py',175),
  ('statement -> NAME EQUALS expression','statement',3,'p_statement_assign','tmp.py',182),
  ('statement -> PRINT LPAREN expression RPAREN','statement',4,'p_statement_expr','tmp.py',186),
  ('statement -> PRINTSTR LPAREN strings RPAREN','statement',4,'p_statement_print_str','tmp.py',190),
  ('statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE','statement',7,'p_statement_if','tmp.py',195),
  ('statement -> WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE','statement',7,'p_statement_while','tmp.py',199),
  ('statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE','statement',15,'p_statement_for','tmp.py',203),
  ('statement -> FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE','statement',7,'p_statement_funct','tmp.py',207),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','tmp.py',212),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','tmp.py',213),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','tmp.py',214),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','tmp.py',215),
  ('expression -> expression INF expression','expression',3,'p_expression_binop','tmp.py',216),
  ('expression -> expression SUP expression','expression',3,'p_expression_binop','tmp.py',217),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','tmp.py',218),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','tmp.py',219),
  ('expression -> expression BOOLEQUAL expression','expression',3,'p_expression_binop','tmp.py',220),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','tmp.py',225),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','tmp.py',229),
  ('expression -> NUMBER','expression',1,'p_expression_number','tmp.py',233),
  ('expression -> NAME','expression',1,'p_expression_name','tmp.py',237),
  ('strings -> NAME strings','strings',2,'p_print_name','tmp.py',241),
  ('strings -> NAME','strings',1,'p_print_name','tmp.py',242),
]
