
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDnonassocINFSUPBOOLEQUALleftPLUSMINUSleftTIMESDIVIDEAND BOOLEQUAL COMA DIVIDE ELSE EQUALS FOR FUNC IF INF LACCOLADE LPAREN MINUS NAME NUMBER OR PLUS PRINT PRINTSTR RACCOLADE RETURN RPAREN SEMI SUP TIMES WHILEstart : bloc bloc : bloc statement SEMI\n            | statement SEMIstatement : NAME EQUALS expressionstatement : PRINT LPAREN expression RPARENstatement : PRINTSTR LPAREN strings RPARENstatement : IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADEstatement : WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADEstatement : FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADEstatement : FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE\n                 | FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADEstatement : NAME LPAREN RPAREN\n                 | NAME LPAREN expression RPARENexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression INF expression \n                  | expression SUP expression \n                  | expression AND expression \n                  | expression OR expression\n                  | expression BOOLEQUAL expression expression : MINUS expressionexpression : expression COMA expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : NAMEparam : NAME COMA param\n             | NAMEstrings : NAME strings\n               | NAME'
    
_lr_action_items = {'NAME':([0,2,10,12,13,14,15,16,17,18,19,21,24,25,31,35,36,37,38,39,40,41,42,43,44,45,54,69,70,72,73,75,76,77,79,80,85,86,89,92,93,],[4,4,20,-3,22,22,22,31,22,22,34,-2,22,22,31,55,22,22,22,22,22,22,22,22,22,22,22,4,4,55,4,4,4,22,4,4,4,88,22,4,4,]),'PRINT':([0,2,12,21,69,70,73,75,76,79,80,85,92,93,],[5,5,-3,-2,5,5,5,5,5,5,5,5,5,5,]),'PRINTSTR':([0,2,12,21,69,70,73,75,76,79,80,85,92,93,],[6,6,-3,-2,6,6,6,6,6,6,6,6,6,6,]),'IF':([0,2,12,21,69,70,73,75,76,79,80,85,92,93,],[7,7,-3,-2,7,7,7,7,7,7,7,7,7,7,]),'WHILE':([0,2,12,21,69,70,73,75,76,79,80,85,92,93,],[8,8,-3,-2,8,8,8,8,8,8,8,8,8,8,]),'FOR':([0,2,12,21,69,70,73,75,76,79,80,85,92,93,],[9,9,-3,-2,9,9,9,9,9,9,9,9,9,9,]),'FUNC':([0,2,12,21,69,70,73,75,76,79,80,85,92,93,],[10,10,-3,-2,10,10,10,10,10,10,10,10,10,10,]),'$end':([1,2,12,21,],[0,-1,-3,-2,]),'SEMI':([3,11,22,23,26,27,46,48,49,50,58,59,60,61,62,63,64,65,66,67,68,71,81,82,83,84,87,94,],[12,21,-27,-4,-26,-12,-23,-13,-5,-6,-14,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,77,-7,-8,86,-10,-11,-9,]),'EQUALS':([4,34,88,],[13,54,89,]),'LPAREN':([4,5,6,7,8,9,13,14,15,17,18,20,24,25,36,37,38,39,40,41,42,43,44,45,54,77,89,],[14,15,16,17,18,19,25,25,25,25,25,35,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'RACCOLADE':([12,21,75,76,79,85,93,],[-3,-2,81,82,84,87,94,]),'MINUS':([13,14,15,17,18,22,23,24,25,26,28,29,32,33,36,37,38,39,40,41,42,43,44,45,46,47,54,58,59,60,61,62,63,64,65,66,67,68,71,77,83,89,90,],[24,24,24,24,24,-27,37,24,24,-26,37,37,37,37,24,24,24,24,24,24,24,24,24,24,-23,37,24,-14,-15,-16,-17,37,37,37,37,37,37,-25,37,24,37,24,37,]),'NUMBER':([13,14,15,17,18,24,25,36,37,38,39,40,41,42,43,44,45,54,77,89,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'RPAREN':([14,22,26,28,29,30,31,32,33,35,46,47,51,55,57,58,59,60,61,62,63,64,65,66,67,68,78,90,],[27,-27,-26,48,49,50,-31,52,53,56,-23,68,-30,-29,74,-14,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-28,91,]),'PLUS':([22,23,26,28,29,32,33,46,47,58,59,60,61,62,63,64,65,66,67,68,71,83,90,],[-27,36,-26,36,36,36,36,-23,36,-14,-15,-16,-17,36,36,36,36,36,36,-25,36,36,36,]),'TIMES':([22,23,26,28,29,32,33,46,47,58,59,60,61,62,63,64,65,66,67,68,71,83,90,],[-27,38,-26,38,38,38,38,38,38,38,38,-16,-17,38,38,38,38,38,38,-25,38,38,38,]),'DIVIDE':([22,23,26,28,29,32,33,46,47,58,59,60,61,62,63,64,65,66,67,68,71,83,90,],[-27,39,-26,39,39,39,39,39,39,39,39,-16,-17,39,39,39,39,39,39,-25,39,39,39,]),'INF':([22,23,26,28,29,32,33,46,47,58,59,60,61,62,63,64,65,66,67,68,71,83,90,],[-27,40,-26,40,40,40,40,-23,40,-14,-15,-16,-17,None,None,40,40,None,40,-25,40,40,40,]),'SUP':([22,23,26,28,29,32,33,46,47,58,59,60,61,62,63,64,65,66,67,68,71,83,90,],[-27,41,-26,41,41,41,41,-23,41,-14,-15,-16,-17,None,None,41,41,None,41,-25,41,41,41,]),'AND':([22,23,26,28,29,32,33,46,47,58,59,60,61,62,63,64,65,66,67,68,71,83,90,],[-27,42,-26,42,42,42,42,-23,42,-14,-15,-16,-17,-18,-19,-20,42,-22,42,-25,42,42,42,]),'OR':([22,23,26,28,29,32,33,46,47,58,59,60,61,62,63,64,65,66,67,68,71,83,90,],[-27,43,-26,43,43,43,43,-23,43,-14,-15,-16,-17,-18,-19,-20,-21,-22,43,-25,43,43,43,]),'BOOLEQUAL':([22,23,26,28,29,32,33,46,47,58,59,60,61,62,63,64,65,66,67,68,71,83,90,],[-27,44,-26,44,44,44,44,-23,44,-14,-15,-16,-17,None,None,44,44,None,44,-25,44,44,44,]),'COMA':([22,23,26,28,29,32,33,46,47,55,58,59,60,61,62,63,64,65,66,67,68,71,83,90,],[-27,45,-26,45,45,45,45,-23,45,72,-14,-15,-16,-17,-18,-19,-20,-21,-22,45,-25,45,45,45,]),'LACCOLADE':([52,53,56,74,91,],[69,70,73,80,92,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'bloc':([0,69,70,73,80,92,],[2,75,76,79,85,93,]),'statement':([0,2,69,70,73,75,76,79,80,85,92,93,],[3,11,3,3,3,11,11,11,3,11,3,11,]),'expression':([13,14,15,17,18,24,25,36,37,38,39,40,41,42,43,44,45,54,77,89,],[23,28,29,32,33,46,47,58,59,60,61,62,63,64,65,66,67,71,83,90,]),'strings':([16,31,],[30,51,]),'param':([35,72,],[57,78,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> bloc','start',1,'p_start','TP1_sans_precedence.py',189),
  ('bloc -> bloc statement SEMI','bloc',3,'p_bloc','TP1_sans_precedence.py',198),
  ('bloc -> statement SEMI','bloc',2,'p_bloc','TP1_sans_precedence.py',199),
  ('statement -> NAME EQUALS expression','statement',3,'p_statement_assign','TP1_sans_precedence.py',206),
  ('statement -> PRINT LPAREN expression RPAREN','statement',4,'p_statement_expr','TP1_sans_precedence.py',210),
  ('statement -> PRINTSTR LPAREN strings RPAREN','statement',4,'p_statement_print_str','TP1_sans_precedence.py',214),
  ('statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE','statement',7,'p_statement_if','TP1_sans_precedence.py',219),
  ('statement -> WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE','statement',7,'p_statement_while','TP1_sans_precedence.py',223),
  ('statement -> FOR LPAREN NAME EQUALS expression SEMI expression SEMI NAME EQUALS expression RPAREN LACCOLADE bloc RACCOLADE','statement',15,'p_statement_for','TP1_sans_precedence.py',227),
  ('statement -> FUNC NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE','statement',7,'p_statement_funct','TP1_sans_precedence.py',231),
  ('statement -> FUNC NAME LPAREN param RPAREN LACCOLADE bloc RACCOLADE','statement',8,'p_statement_funct','TP1_sans_precedence.py',232),
  ('statement -> NAME LPAREN RPAREN','statement',3,'p_statement_call_function','TP1_sans_precedence.py',238),
  ('statement -> NAME LPAREN expression RPAREN','statement',4,'p_statement_call_function','TP1_sans_precedence.py',239),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','TP1_sans_precedence.py',244),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','TP1_sans_precedence.py',245),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','TP1_sans_precedence.py',246),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','TP1_sans_precedence.py',247),
  ('expression -> expression INF expression','expression',3,'p_expression_binop','TP1_sans_precedence.py',248),
  ('expression -> expression SUP expression','expression',3,'p_expression_binop','TP1_sans_precedence.py',249),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','TP1_sans_precedence.py',250),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','TP1_sans_precedence.py',251),
  ('expression -> expression BOOLEQUAL expression','expression',3,'p_expression_binop','TP1_sans_precedence.py',252),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','TP1_sans_precedence.py',257),
  ('expression -> expression COMA expression','expression',3,'p_expression_suite','TP1_sans_precedence.py',261),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','TP1_sans_precedence.py',265),
  ('expression -> NUMBER','expression',1,'p_expression_number','TP1_sans_precedence.py',269),
  ('expression -> NAME','expression',1,'p_expression_name','TP1_sans_precedence.py',273),
  ('param -> NAME COMA param','param',3,'p_param_funct','TP1_sans_precedence.py',277),
  ('param -> NAME','param',1,'p_param_funct','TP1_sans_precedence.py',278),
  ('strings -> NAME strings','strings',2,'p_print_name','TP1_sans_precedence.py',283),
  ('strings -> NAME','strings',1,'p_print_name','TP1_sans_precedence.py',284),
]
